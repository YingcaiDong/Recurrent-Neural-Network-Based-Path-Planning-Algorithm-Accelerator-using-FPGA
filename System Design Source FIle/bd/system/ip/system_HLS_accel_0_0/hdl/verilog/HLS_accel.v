// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="HLS_accel,hls_ip_2014_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.690000,HLS_SYN_LAT=924676,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=19,HLS_SYN_FF=3165,HLS_SYN_LUT=5679}" *)

module HLS_accel (
        s_axi_CONTROL_BUS_AWVALID,
        s_axi_CONTROL_BUS_AWREADY,
        s_axi_CONTROL_BUS_AWADDR,
        s_axi_CONTROL_BUS_WVALID,
        s_axi_CONTROL_BUS_WREADY,
        s_axi_CONTROL_BUS_WDATA,
        s_axi_CONTROL_BUS_WSTRB,
        s_axi_CONTROL_BUS_ARVALID,
        s_axi_CONTROL_BUS_ARREADY,
        s_axi_CONTROL_BUS_ARADDR,
        s_axi_CONTROL_BUS_RVALID,
        s_axi_CONTROL_BUS_RREADY,
        s_axi_CONTROL_BUS_RDATA,
        s_axi_CONTROL_BUS_RRESP,
        s_axi_CONTROL_BUS_BVALID,
        s_axi_CONTROL_BUS_BREADY,
        s_axi_CONTROL_BUS_BRESP,
        ap_clk,
        ap_rst_n,
        INPUT_STREAM_TDATA,
        INPUT_STREAM_TVALID,
        INPUT_STREAM_TREADY,
        INPUT_STREAM_TKEEP,
        INPUT_STREAM_TSTRB,
        INPUT_STREAM_TUSER,
        INPUT_STREAM_TLAST,
        INPUT_STREAM_TID,
        INPUT_STREAM_TDEST,
        OUTPUT_STREAM_TDATA,
        OUTPUT_STREAM_TVALID,
        OUTPUT_STREAM_TREADY,
        OUTPUT_STREAM_TKEEP,
        OUTPUT_STREAM_TSTRB,
        OUTPUT_STREAM_TUSER,
        OUTPUT_STREAM_TLAST,
        OUTPUT_STREAM_TID,
        OUTPUT_STREAM_TDEST,
        interrupt
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 95'b1;
parameter    ap_ST_st2_fsm_1 = 95'b10;
parameter    ap_ST_st3_fsm_2 = 95'b100;
parameter    ap_ST_st4_fsm_3 = 95'b1000;
parameter    ap_ST_st5_fsm_4 = 95'b10000;
parameter    ap_ST_st6_fsm_5 = 95'b100000;
parameter    ap_ST_st7_fsm_6 = 95'b1000000;
parameter    ap_ST_st8_fsm_7 = 95'b10000000;
parameter    ap_ST_st9_fsm_8 = 95'b100000000;
parameter    ap_ST_st10_fsm_9 = 95'b1000000000;
parameter    ap_ST_st11_fsm_10 = 95'b10000000000;
parameter    ap_ST_st12_fsm_11 = 95'b100000000000;
parameter    ap_ST_st13_fsm_12 = 95'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 95'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 95'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 95'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 95'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 95'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 95'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 95'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 95'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 95'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 95'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 95'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 95'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 95'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 95'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 95'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 95'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 95'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 95'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 95'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 95'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 95'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 95'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 95'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 95'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 95'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 95'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 95'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 95'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 95'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 95'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 95'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 95'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 95'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 95'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 95'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 95'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 95'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 95'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 95'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 95'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 95'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 95'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 95'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 95'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 95'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 95'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 95'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 95'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 95'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 95'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 95'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 95'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 95'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 95'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 95'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 95'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 95'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 95'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 95'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 95'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 95'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 95'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 95'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 95'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 95'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 95'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 95'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 95'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 95'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_82 = 95'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_83 = 95'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st85_fsm_84 = 95'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st86_fsm_85 = 95'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st87_fsm_86 = 95'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st88_fsm_87 = 95'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st89_fsm_88 = 95'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st90_fsm_89 = 95'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st91_fsm_90 = 95'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st92_fsm_91 = 95'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st93_fsm_92 = 95'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_pp3_stg0_fsm_93 = 95'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st96_fsm_94 = 95'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 5;
parameter    C_DATA_WIDTH = 32;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv32_4F = 32'b1001111;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_55 = 32'b1010101;
parameter    ap_const_lv32_49 = 32'b1001001;
parameter    ap_const_lv32_4E = 32'b1001110;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_3A = 32'b111010;
parameter    ap_const_lv32_5A = 32'b1011010;
parameter    ap_const_lv32_3B = 32'b111011;
parameter    ap_const_lv32_5B = 32'b1011011;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_44 = 32'b1000100;
parameter    ap_const_lv32_5C = 32'b1011100;
parameter    ap_const_lv32_5D = 32'b1011101;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv14_0 = 14'b00000000000000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv32_4A = 32'b1001010;
parameter    ap_const_lv32_41200000 = 32'b1000001001000000000000000000000;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_40E00000 = 32'b1000000111000000000000000000000;
parameter    ap_const_lv32_40800000 = 32'b1000000100000000000000000000000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv32_56 = 32'b1010110;
parameter    ap_const_lv64_3FE6A09EDBF8B9BB = 64'b11111111100110101000001001111011011011111110001011100110111011;
parameter    ap_const_lv64_3F847AE147AE147B = 64'b11111110000100011110101110000101000111101011100001010001111011;
parameter    ap_const_lv32_50 = 32'b1010000;
parameter    ap_const_lv11_400 = 11'b10000000000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv6_20 = 6'b100000;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv6_3F = 6'b111111;
parameter    ap_const_lv4_9 = 4'b1001;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv32_C2C80000 = 32'b11000010110010000000000000000000;
parameter    ap_const_lv32_42C80000 = 32'b1000010110010000000000000000000;
parameter    ap_const_lv14_1 = 14'b1;
parameter    ap_const_lv12_1 = 12'b1;
parameter    ap_const_lv12_400 = 12'b10000000000;
parameter    ap_const_lv14_27FF = 14'b10011111111111;
parameter    ap_const_lv10_3FF = 10'b1111111111;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv32_5E = 32'b1011110;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_CONTROL_BUS_WSTRB_WIDTH = (C_S_AXI_CONTROL_BUS_DATA_WIDTH / ap_const_int64_8);
parameter    C_WSTRB_WIDTH = (C_DATA_WIDTH / ap_const_int64_8);

input   s_axi_CONTROL_BUS_AWVALID;
output   s_axi_CONTROL_BUS_AWREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CONTROL_BUS_AWADDR;
input   s_axi_CONTROL_BUS_WVALID;
output   s_axi_CONTROL_BUS_WREADY;
input  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1 : 0] s_axi_CONTROL_BUS_WDATA;
input  [C_S_AXI_CONTROL_BUS_WSTRB_WIDTH - 1 : 0] s_axi_CONTROL_BUS_WSTRB;
input   s_axi_CONTROL_BUS_ARVALID;
output   s_axi_CONTROL_BUS_ARREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CONTROL_BUS_ARADDR;
output   s_axi_CONTROL_BUS_RVALID;
input   s_axi_CONTROL_BUS_RREADY;
output  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1 : 0] s_axi_CONTROL_BUS_RDATA;
output  [1:0] s_axi_CONTROL_BUS_RRESP;
output   s_axi_CONTROL_BUS_BVALID;
input   s_axi_CONTROL_BUS_BREADY;
output  [1:0] s_axi_CONTROL_BUS_BRESP;
input   ap_clk;
input   ap_rst_n;
input  [31:0] INPUT_STREAM_TDATA;
input   INPUT_STREAM_TVALID;
output   INPUT_STREAM_TREADY;
input  [3:0] INPUT_STREAM_TKEEP;
input  [3:0] INPUT_STREAM_TSTRB;
input  [3:0] INPUT_STREAM_TUSER;
input  [0:0] INPUT_STREAM_TLAST;
input  [4:0] INPUT_STREAM_TID;
input  [4:0] INPUT_STREAM_TDEST;
output  [31:0] OUTPUT_STREAM_TDATA;
output   OUTPUT_STREAM_TVALID;
input   OUTPUT_STREAM_TREADY;
output  [3:0] OUTPUT_STREAM_TKEEP;
output  [3:0] OUTPUT_STREAM_TSTRB;
output  [3:0] OUTPUT_STREAM_TUSER;
output  [0:0] OUTPUT_STREAM_TLAST;
output  [4:0] OUTPUT_STREAM_TID;
output  [4:0] OUTPUT_STREAM_TDEST;
output   interrupt;

reg INPUT_STREAM_TREADY;
reg OUTPUT_STREAM_TVALID;
reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [94:0] ap_CS_fsm = 95'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_136;
reg    ap_ready;
wire    HLS_accel_CONTROL_BUS_s_axi_U_ap_dummy_ce;
reg   [10:0] indvar_flatten3_reg_486;
reg   [5:0] i4_0_i_reg_497;
reg   [5:0] j5_0_i_reg_508;
wire   [63:0] grp_fu_535_p1;
reg   [63:0] reg_562;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_187;
reg   [0:0] tmp_11_reg_1778;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_bdd_198;
reg   [0:0] tmp_23_reg_1793;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_bdd_209;
reg   [0:0] tmp_52_reg_1810;
reg    ap_sig_cseq_ST_st54_fsm_53;
reg    ap_sig_bdd_220;
reg    ap_sig_cseq_ST_st80_fsm_79;
reg    ap_sig_bdd_228;
reg   [0:0] tmp_32_reg_1995;
reg   [63:0] reg_568;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_243;
wire   [0:0] tmp_32_fu_1013_p2;
wire   [63:0] grp_fu_552_p2;
reg   [63:0] reg_573;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_258;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_266;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_275;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_284;
reg    ap_sig_cseq_ST_st86_fsm_85;
reg    ap_sig_bdd_292;
wire   [31:0] grp_fu_520_p2;
reg   [31:0] reg_578;
reg    ap_sig_cseq_ST_st74_fsm_73;
reg    ap_sig_bdd_305;
reg    ap_sig_cseq_ST_st79_fsm_78;
reg    ap_sig_bdd_313;
reg   [31:0] reg_585;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_322;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_bdd_329;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_bdd_338;
reg    ap_sig_cseq_ST_st53_fsm_52;
reg    ap_sig_bdd_346;
reg    ap_sig_cseq_ST_st65_fsm_64;
reg    ap_sig_bdd_354;
wire   [63:0] grp_fu_547_p2;
reg   [63:0] reg_592;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_364;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_bdd_372;
reg    ap_sig_cseq_ST_st47_fsm_46;
reg    ap_sig_bdd_381;
reg    ap_sig_cseq_ST_st59_fsm_58;
reg    ap_sig_bdd_390;
reg    ap_sig_cseq_ST_st91_fsm_90;
reg    ap_sig_bdd_398;
wire   [31:0] grp_fu_532_p1;
reg   [31:0] reg_597;
reg    ap_sig_cseq_ST_st60_fsm_59;
reg    ap_sig_bdd_411;
reg    ap_sig_cseq_ST_st92_fsm_91;
reg    ap_sig_bdd_418;
wire   [0:0] exitcond_flatten_fu_604_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_431;
reg    ap_sig_bdd_436;
wire   [10:0] indvar_flatten_next_fu_610_p2;
wire   [5:0] i_0_i_mid2_fu_636_p3;
wire   [5:0] j_fu_676_p2;
wire   [0:0] exitcond_flatten8_fu_682_p2;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_453;
reg    ap_sig_bdd_457;
wire   [10:0] indvar_flatten_next7_fu_688_p2;
wire   [5:0] i1_0_i_mid2_fu_714_p3;
wire   [5:0] j_1_fu_754_p2;
wire   [0:0] exitcond2_i_i_mid_fu_774_p2;
reg   [0:0] exitcond2_i_i_mid_reg_1755;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_474;
wire   [5:0] p_0_i_i_mid2_fu_786_p3;
reg   [5:0] p_0_i_i_mid2_reg_1760;
wire   [5:0] q_0_i_i_mid2_fu_799_p3;
reg   [5:0] q_0_i_i_mid2_reg_1768;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_485;
wire   [5:0] y_assign_fu_812_p2;
reg   [5:0] y_assign_reg_1773;
wire  signed [11:0] p_addr4_cast_fu_844_p1;
reg  signed [11:0] p_addr4_cast_reg_1783;
wire   [11:0] tmp_52_0_1_trn_cast_fu_867_p1;
reg   [11:0] tmp_52_0_1_trn_cast_reg_1799;
wire  signed [12:0] tmp_16_trn_cast1_fu_890_p1;
reg  signed [12:0] tmp_16_trn_cast1_reg_1816;
wire   [31:0] a_q0;
reg   [31:0] a_load_1_reg_1821;
wire   [31:0] a_q1;
reg   [31:0] a_load_2_reg_1827;
wire   [5:0] q_fu_893_p2;
reg   [5:0] q_reg_1834;
wire   [11:0] tmp_46_0_2_trn_cast_fu_898_p1;
reg   [11:0] tmp_46_0_2_trn_cast_reg_1840;
wire   [10:0] tmp_53_fu_912_p3;
reg   [10:0] tmp_53_reg_1851;
wire   [0:0] grp_fu_540_p2;
reg   [0:0] tmp_18_reg_1861;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_525;
reg   [31:0] a_load_3_reg_1866;
reg   [63:0] tmp_48_0_2_reg_1872;
reg   [31:0] a_load_4_reg_1877;
wire   [11:0] p_addr4_fu_978_p2;
reg   [11:0] p_addr4_reg_1894;
wire   [11:0] p_addr8_fu_983_p2;
reg   [11:0] p_addr8_reg_1899;
wire   [11:0] p_addr10_fu_988_p2;
reg   [11:0] p_addr10_reg_1904;
reg   [0:0] tmp_44_reg_1909;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_549;
reg   [31:0] a_load_5_reg_1914;
reg   [31:0] a_load_6_reg_1921;
reg   [63:0] tmp_48_2_reg_1927;
reg   [0:0] tmp_50_reg_1942;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_566;
reg   [31:0] a_load_7_reg_1947;
reg   [31:0] a_load_8_reg_1954;
reg   [63:0] tmp_48_2_2_reg_1960;
wire   [63:0] tmp_89_fu_1001_p1;
reg   [63:0] tmp_89_reg_1965;
reg   [9:0] a_addr_1_reg_1971;
wire   [3:0] speed_0_i_i_mid2_fu_1005_p3;
reg   [3:0] speed_0_i_i_mid2_reg_1977;
reg   [0:0] tmp_57_reg_1983;
reg   [31:0] a_load_reg_1988;
reg   [0:0] tmp_62_reg_1999;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_587;
reg   [0:0] tmp_67_reg_2004;
wire   [63:0] tmp_21_fu_1059_p3;
reg   [63:0] tmp_21_reg_2009;
reg   [0:0] tmp_72_reg_2014;
wire   [31:0] grp_fu_526_p2;
reg   [31:0] tmp_14_reg_2019;
wire   [63:0] tmp_49_0_2_fu_1107_p3;
reg   [63:0] tmp_49_0_2_reg_2029;
reg   [0:0] tmp_77_reg_2034;
wire   [31:0] b_q0;
reg   [31:0] b_load_reg_2039;
wire   [63:0] tmp_49_2_fu_1155_p3;
reg   [63:0] tmp_49_2_reg_2045;
reg   [0:0] tmp_82_reg_2050;
wire   [63:0] tmp_49_2_2_fu_1203_p3;
reg   [63:0] tmp_49_2_2_reg_2055;
wire   [0:0] tmp_91_fu_1211_p2;
reg   [0:0] tmp_91_reg_2060;
wire   [0:0] or_cond_i12_i_i_fu_1251_p2;
reg   [0:0] or_cond_i12_i_i_reg_2065;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_620;
wire   [0:0] tmp_93_fu_1256_p2;
reg   [0:0] tmp_93_reg_2071;
wire   [31:0] x_assign_1_fu_1285_p3;
reg   [31:0] x_assign_1_reg_2077;
wire   [31:0] output_0_i13_i_i_fu_1293_p3;
wire   [31:0] sum_4_i_i_fu_1301_p3;
reg   [31:0] sum_4_i_i_reg_2089;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_bdd_635;
wire   [0:0] tmp_45_fu_1343_p2;
reg   [0:0] tmp_45_reg_2096;
reg   [0:0] tmp_99_reg_2101;
wire   [31:0] x_assign_6_0_1_fu_1348_p3;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_648;
wire   [31:0] x_assign_2_fu_1395_p3;
reg   [31:0] x_assign_2_reg_2111;
reg   [31:0] tmp_31_reg_2116;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_659;
wire   [31:0] sum_4_i_i_0_2_fu_1409_p3;
reg   [31:0] sum_4_i_i_0_2_reg_2121;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_bdd_668;
wire   [0:0] tmp_58_fu_1450_p2;
reg   [0:0] tmp_58_reg_2127;
wire   [31:0] x_assign_6_1_fu_1455_p3;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_bdd_680;
wire   [31:0] sum_4_i_i_1_fu_1462_p3;
reg   [31:0] sum_4_i_i_1_reg_2137;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_bdd_690;
wire   [0:0] tmp_63_fu_1503_p2;
reg   [0:0] tmp_63_reg_2142;
wire   [31:0] x_assign_6_1_2_fu_1508_p3;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_bdd_701;
wire   [31:0] sum_4_i_i_2_fu_1515_p3;
reg   [31:0] sum_4_i_i_2_reg_2152;
reg    ap_sig_cseq_ST_st48_fsm_47;
reg    ap_sig_bdd_710;
wire   [0:0] tmp_73_fu_1557_p2;
reg   [0:0] tmp_73_reg_2157;
wire   [31:0] x_assign_6_2_1_fu_1562_p3;
reg    ap_sig_cseq_ST_st49_fsm_48;
reg    ap_sig_bdd_721;
reg   [31:0] tmp_27_reg_2167;
reg    ap_sig_cseq_ST_st69_fsm_68;
reg    ap_sig_bdd_729;
wire   [13:0] indvar_flatten_next3_fu_1569_p2;
reg    ap_sig_cseq_ST_st93_fsm_92;
reg    ap_sig_bdd_738;
wire   [11:0] indvar_flatten_next2_fu_1581_p3;
wire   [0:0] exitcond2_i_i_fu_1589_p2;
wire   [0:0] exitcond_flatten1_fu_1594_p2;
wire   [3:0] speed_fu_1600_p2;
wire   [0:0] exitcond_flatten2_fu_1605_p2;
wire   [0:0] exitcond_flatten3_fu_1611_p2;
reg   [0:0] exitcond_flatten3_reg_2201;
reg    ap_sig_cseq_ST_pp3_stg0_fsm_93;
reg    ap_sig_bdd_757;
reg    ap_reg_ppiten_pp3_it0 = 1'b0;
reg    ap_sig_ioackin_OUTPUT_STREAM_TREADY;
reg    ap_reg_ppiten_pp3_it1 = 1'b0;
wire   [10:0] indvar_flatten_next1_fu_1617_p2;
wire   [5:0] i4_0_i_mid2_fu_1643_p3;
reg   [5:0] i4_0_i_mid2_reg_2210;
wire   [0:0] last_assign_fu_1700_p2;
reg   [0:0] last_assign_reg_2220;
wire   [5:0] j_2_fu_1706_p2;
reg   [9:0] a_address0;
reg    a_ce0;
reg    a_we0;
reg   [31:0] a_d0;
reg   [9:0] a_address1;
reg    a_ce1;
reg   [9:0] b_address0;
reg    b_ce0;
reg    b_we0;
wire   [31:0] b_d0;
reg   [9:0] out_address0;
reg    out_ce0;
reg    out_we0;
wire   [31:0] out_d0;
wire   [31:0] out_q0;
reg   [10:0] indvar_flatten_reg_331;
reg   [5:0] i_0_i_reg_342;
reg   [5:0] j_0_i_reg_353;
reg   [10:0] indvar_flatten6_reg_364;
reg   [5:0] i1_0_i_reg_375;
reg   [5:0] j2_0_i_reg_386;
reg   [0:0] exitcond_flatten4_reg_397;
reg   [0:0] exitcond2_i_i1_reg_409;
reg   [5:0] p_0_i_i_reg_420;
reg   [5:0] q_0_i_i_reg_431;
reg   [3:0] speed1_reg_442;
reg   [3:0] speed_0_i_i_reg_453;
reg   [11:0] indvar_flatten1_reg_464;
reg   [13:0] indvar_flatten2_reg_475;
reg   [5:0] i4_0_i_phi_fu_501_p4;
wire   [63:0] tmp_3_fu_671_p1;
wire   [63:0] tmp_6_fu_749_p1;
wire  signed [63:0] tmp_13_fu_854_p1;
wire  signed [63:0] tmp_24_fu_877_p1;
wire  signed [63:0] tmp_46_fu_907_p1;
wire  signed [63:0] tmp_55_fu_929_p1;
wire   [63:0] tmp_65_fu_942_p1;
wire  signed [63:0] tmp_80_fu_973_p1;
wire   [63:0] tmp_84_fu_993_p1;
wire   [63:0] tmp_86_fu_997_p1;
wire   [63:0] tmp_103_fu_1695_p1;
reg    ap_reg_ioackin_OUTPUT_STREAM_TREADY = 1'b0;
wire   [31:0] ret_fu_644_p1;
reg   [31:0] grp_fu_520_p0;
reg   [31:0] grp_fu_520_p1;
reg    ap_sig_cseq_ST_st61_fsm_60;
reg    ap_sig_bdd_931;
reg    ap_sig_cseq_ST_st70_fsm_69;
reg    ap_sig_bdd_938;
reg    ap_sig_cseq_ST_st75_fsm_74;
reg    ap_sig_bdd_945;
reg   [31:0] grp_fu_526_p0;
reg   [31:0] grp_fu_526_p1;
reg    ap_sig_cseq_ST_st66_fsm_65;
reg    ap_sig_bdd_955;
wire   [63:0] grp_fu_532_p0;
reg   [31:0] grp_fu_535_p0;
wire   [31:0] sum_4_i_i_0_1_fu_1402_p3;
reg   [31:0] grp_fu_540_p0;
reg   [31:0] grp_fu_540_p1;
reg   [63:0] grp_fu_547_p0;
reg   [63:0] grp_fu_547_p1;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_bdd_994;
reg    ap_sig_cseq_ST_st43_fsm_42;
reg    ap_sig_bdd_1001;
reg    ap_sig_cseq_ST_st55_fsm_54;
reg    ap_sig_bdd_1009;
reg    ap_sig_cseq_ST_st87_fsm_86;
reg    ap_sig_bdd_1017;
reg   [63:0] grp_fu_552_p0;
reg   [63:0] grp_fu_552_p1;
reg    ap_sig_cseq_ST_st81_fsm_80;
reg    ap_sig_bdd_1031;
wire   [0:0] exitcond4_i_fu_616_p2;
wire   [5:0] i_fu_630_p2;
wire   [5:0] j_0_i_mid2_fu_622_p3;
wire   [10:0] tmp_1_fu_653_p3;
wire   [11:0] p_addr_cast_fu_661_p1;
wire   [11:0] tmp_7_trn_cast_fu_649_p1;
wire   [11:0] p_addr1_fu_665_p2;
wire   [0:0] exitcond2_i_fu_694_p2;
wire   [5:0] i_s_fu_708_p2;
wire   [5:0] j2_0_i_mid2_fu_700_p3;
wire   [10:0] tmp_5_fu_731_p3;
wire   [11:0] p_addr2_cast_fu_739_p1;
wire   [11:0] tmp_6_trn_cast_fu_727_p1;
wire   [11:0] p_addr3_fu_743_p2;
wire   [0:0] not_exitcond_flatten_fu_768_p2;
wire   [5:0] p_0_i_i_mid_fu_760_p3;
wire   [5:0] p_fu_780_p2;
wire   [0:0] tmp_7_fu_794_p2;
wire   [5:0] x_assign_fu_807_p2;
wire   [5:0] tmp_10_fu_818_p2;
wire   [10:0] tmp_12_fu_836_p3;
wire  signed [11:0] tmp_16_trn_cast_fu_832_p1;
wire  signed [11:0] p_addr5_fu_848_p2;
wire  signed [11:0] p_addr6_fu_871_p2;
wire  signed [11:0] p_addr7_fu_902_p2;
wire   [12:0] p_addr8_cast_fu_919_p1;
wire  signed [12:0] p_addr9_fu_923_p2;
wire   [11:0] p_addr8_cast1_fu_934_p1;
wire   [11:0] p_addr_fu_937_p2;
wire   [5:0] x_assign_s_fu_947_p2;
wire   [10:0] tmp_75_fu_952_p3;
wire   [12:0] p_addr11_cast_fu_964_p1;
wire  signed [12:0] p_addr2_fu_968_p2;
wire   [11:0] p_addr11_cast1_fu_960_p1;
wire   [31:0] a_load_1_to_int_fu_1019_p1;
wire   [7:0] tmp_fu_1022_p4;
wire   [22:0] tmp_16_fu_1032_p1;
wire   [0:0] notrhs_fu_1042_p2;
wire   [0:0] notlhs_fu_1036_p2;
wire   [0:0] tmp_17_fu_1048_p2;
wire   [0:0] tmp_19_fu_1054_p2;
wire   [31:0] a_load_3_to_int_fu_1067_p1;
wire   [7:0] tmp_47_fu_1070_p4;
wire   [22:0] tmp_48_fu_1080_p1;
wire   [0:0] notrhs2_fu_1090_p2;
wire   [0:0] notlhs2_fu_1084_p2;
wire   [0:0] tmp_49_fu_1096_p2;
wire   [0:0] tmp_51_fu_1102_p2;
wire   [31:0] a_load_6_to_int_fu_1115_p1;
wire   [7:0] tmp_64_fu_1118_p4;
wire   [22:0] tmp_83_fu_1128_p1;
wire   [0:0] notrhs5_fu_1138_p2;
wire   [0:0] notlhs5_fu_1132_p2;
wire   [0:0] tmp_66_fu_1144_p2;
wire   [0:0] tmp_68_fu_1150_p2;
wire   [31:0] a_load_8_to_int_fu_1163_p1;
wire   [7:0] tmp_74_fu_1166_p4;
wire   [22:0] tmp_88_fu_1176_p1;
wire   [0:0] notrhs7_fu_1186_p2;
wire   [0:0] notlhs7_fu_1180_p2;
wire   [0:0] tmp_76_fu_1192_p2;
wire   [0:0] tmp_78_fu_1198_p2;
wire   [31:0] m_assign_to_int_fu_1216_p1;
wire   [7:0] tmp_79_fu_1219_p4;
wire   [22:0] tmp_90_fu_1229_p1;
wire   [0:0] notrhs8_fu_1239_p2;
wire   [0:0] notlhs8_fu_1233_p2;
wire   [0:0] tmp_81_fu_1245_p2;
wire   [0:0] sel_tmp1_fu_1262_p2;
wire   [0:0] sel_tmp2_fu_1267_p2;
wire   [0:0] tmp_95_fu_1280_p2;
wire   [31:0] tmp_94_fu_1272_p3;
wire   [31:0] a_load_2_to_int_fu_1308_p1;
wire   [7:0] tmp_25_fu_1311_p4;
wire   [22:0] tmp_30_fu_1321_p1;
wire   [0:0] notrhs1_fu_1331_p2;
wire   [0:0] notlhs1_fu_1325_p2;
wire   [0:0] tmp_33_fu_1337_p2;
wire   [31:0] x_assign_1_to_int_fu_1355_p1;
wire   [7:0] tmp_96_fu_1358_p4;
wire   [22:0] tmp_97_fu_1368_p1;
wire   [0:0] notrhs9_fu_1378_p2;
wire   [0:0] notlhs9_fu_1372_p2;
wire   [0:0] tmp_98_fu_1384_p2;
wire   [0:0] tmp_100_fu_1390_p2;
wire   [31:0] a_load_4_to_int_fu_1415_p1;
wire   [7:0] tmp_54_fu_1418_p4;
wire   [22:0] tmp_60_fu_1428_p1;
wire   [0:0] notrhs3_fu_1438_p2;
wire   [0:0] notlhs3_fu_1432_p2;
wire   [0:0] tmp_56_fu_1444_p2;
wire   [31:0] a_load_5_to_int_fu_1468_p1;
wire   [7:0] tmp_59_fu_1471_p4;
wire   [22:0] tmp_70_fu_1481_p1;
wire   [0:0] notrhs4_fu_1491_p2;
wire   [0:0] notlhs4_fu_1485_p2;
wire   [0:0] tmp_61_fu_1497_p2;
wire   [31:0] a_load_7_to_int_fu_1522_p1;
wire   [7:0] tmp_69_fu_1525_p4;
wire   [22:0] tmp_85_fu_1535_p1;
wire   [0:0] notrhs6_fu_1545_p2;
wire   [0:0] notlhs6_fu_1539_p2;
wire   [0:0] tmp_71_fu_1551_p2;
wire   [11:0] indvar_flatten13_op_fu_1575_p2;
wire   [0:0] exitcond_i_fu_1623_p2;
wire   [5:0] i_1_fu_1637_p2;
wire   [4:0] tmp_101_fu_1651_p1;
wire   [5:0] j5_0_i_mid2_fu_1629_p3;
wire   [9:0] j5_0_i_cast5_fu_1663_p1;
wire   [9:0] tmp_8_fu_1655_p3;
wire   [10:0] tmp_102_fu_1677_p3;
wire   [11:0] p_addr16_cast_fu_1685_p1;
wire   [11:0] tmp_5_trn_cast_fu_1673_p1;
wire   [11:0] p_addr11_fu_1689_p2;
wire   [9:0] k_fu_1667_p2;
reg   [1:0] grp_fu_520_opcode;
wire    grp_fu_520_ce;
wire    grp_fu_526_ce;
reg   [4:0] grp_fu_540_opcode;
wire    grp_fu_547_ce;
wire    grp_fu_552_ce;
reg    ap_sig_cseq_ST_st96_fsm_94;
reg    ap_sig_bdd_1778;
reg   [94:0] ap_NS_fsm;


HLS_accel_CONTROL_BUS_s_axi #(
    .C_ADDR_WIDTH( C_S_AXI_CONTROL_BUS_ADDR_WIDTH ),
    .C_DATA_WIDTH( C_S_AXI_CONTROL_BUS_DATA_WIDTH ))
HLS_accel_CONTROL_BUS_s_axi_U(
    .AWVALID( s_axi_CONTROL_BUS_AWVALID ),
    .AWREADY( s_axi_CONTROL_BUS_AWREADY ),
    .AWADDR( s_axi_CONTROL_BUS_AWADDR ),
    .WVALID( s_axi_CONTROL_BUS_WVALID ),
    .WREADY( s_axi_CONTROL_BUS_WREADY ),
    .WDATA( s_axi_CONTROL_BUS_WDATA ),
    .WSTRB( s_axi_CONTROL_BUS_WSTRB ),
    .ARVALID( s_axi_CONTROL_BUS_ARVALID ),
    .ARREADY( s_axi_CONTROL_BUS_ARREADY ),
    .ARADDR( s_axi_CONTROL_BUS_ARADDR ),
    .RVALID( s_axi_CONTROL_BUS_RVALID ),
    .RREADY( s_axi_CONTROL_BUS_RREADY ),
    .RDATA( s_axi_CONTROL_BUS_RDATA ),
    .RRESP( s_axi_CONTROL_BUS_RRESP ),
    .BVALID( s_axi_CONTROL_BUS_BVALID ),
    .BREADY( s_axi_CONTROL_BUS_BREADY ),
    .BRESP( s_axi_CONTROL_BUS_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( HLS_accel_CONTROL_BUS_s_axi_U_ap_dummy_ce ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle )
);

HLS_accel_a #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
a_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( a_address0 ),
    .ce0( a_ce0 ),
    .we0( a_we0 ),
    .d0( a_d0 ),
    .q0( a_q0 ),
    .address1( a_address1 ),
    .ce1( a_ce1 ),
    .q1( a_q1 )
);

HLS_accel_b #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
b_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( b_address0 ),
    .ce0( b_ce0 ),
    .we0( b_we0 ),
    .d0( b_d0 ),
    .q0( b_q0 )
);

HLS_accel_b #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
out_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( out_address0 ),
    .ce0( out_ce0 ),
    .we0( out_we0 ),
    .d0( out_d0 ),
    .q0( out_q0 )
);

HLS_accel_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
HLS_accel_faddfsub_32ns_32ns_32_5_full_dsp_U0(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_520_p0 ),
    .din1( grp_fu_520_p1 ),
    .opcode( grp_fu_520_opcode ),
    .ce( grp_fu_520_ce ),
    .dout( grp_fu_520_p2 )
);

HLS_accel_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
HLS_accel_fmul_32ns_32ns_32_4_max_dsp_U1(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_526_p0 ),
    .din1( grp_fu_526_p1 ),
    .ce( grp_fu_526_ce ),
    .dout( grp_fu_526_p2 )
);

HLS_accel_fptrunc_64ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
HLS_accel_fptrunc_64ns_32_1_U2(
    .din0( grp_fu_532_p0 ),
    .dout( grp_fu_532_p1 )
);

HLS_accel_fpext_32ns_64_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
HLS_accel_fpext_32ns_64_1_U3(
    .din0( grp_fu_535_p0 ),
    .dout( grp_fu_535_p1 )
);

HLS_accel_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
HLS_accel_fcmp_32ns_32ns_1_1_U4(
    .din0( grp_fu_540_p0 ),
    .din1( grp_fu_540_p1 ),
    .opcode( grp_fu_540_opcode ),
    .dout( grp_fu_540_p2 )
);

HLS_accel_dadd_64ns_64ns_64_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
HLS_accel_dadd_64ns_64ns_64_5_full_dsp_U5(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_547_p0 ),
    .din1( grp_fu_547_p1 ),
    .ce( grp_fu_547_ce ),
    .dout( grp_fu_547_p2 )
);

HLS_accel_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
HLS_accel_dmul_64ns_64ns_64_6_max_dsp_U6(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .din0( grp_fu_552_p0 ),
    .din1( grp_fu_552_p1 ),
    .ce( grp_fu_552_ce ),
    .dout( grp_fu_552_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ioackin_OUTPUT_STREAM_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_OUTPUT_STREAM_TREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_OUTPUT_STREAM_TREADY <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_93) & (ap_const_lv1_0 == exitcond_flatten3_reg_2201) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & ~((ap_const_lv1_0 == exitcond_flatten3_reg_2201) & (ap_const_logic_0 == ap_sig_ioackin_OUTPUT_STREAM_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1)))) begin
            ap_reg_ioackin_OUTPUT_STREAM_TREADY <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_93) & (ap_const_lv1_0 == exitcond_flatten3_reg_2201) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_1 == OUTPUT_STREAM_TREADY))) begin
            ap_reg_ioackin_OUTPUT_STREAM_TREADY <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp3_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp3_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_93) & ~((ap_const_lv1_0 == exitcond_flatten3_reg_2201) & (ap_const_logic_0 == ap_sig_ioackin_OUTPUT_STREAM_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1)) & ~(ap_const_lv1_0 == exitcond_flatten3_fu_1611_p2))) begin
            ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92) & ~(ap_const_lv1_0 == exitcond_flatten2_fu_1605_p2))) begin
            ap_reg_ppiten_pp3_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp3_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp3_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_93) & ~((ap_const_lv1_0 == exitcond_flatten3_reg_2201) & (ap_const_logic_0 == ap_sig_ioackin_OUTPUT_STREAM_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1)) & (ap_const_lv1_0 == exitcond_flatten3_fu_1611_p2))) begin
            ap_reg_ppiten_pp3_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92) & ~(ap_const_lv1_0 == exitcond_flatten2_fu_1605_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_93) & ~((ap_const_lv1_0 == exitcond_flatten3_reg_2201) & (ap_const_logic_0 == ap_sig_ioackin_OUTPUT_STREAM_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1)) & ~(ap_const_lv1_0 == exitcond_flatten3_fu_1611_p2)))) begin
            ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_457 & ~(ap_const_lv1_0 == exitcond_flatten8_fu_682_p2))) begin
        exitcond2_i_i1_reg_409 <= ap_const_lv1_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92) & (ap_const_lv1_0 == exitcond_flatten2_fu_1605_p2))) begin
        exitcond2_i_i1_reg_409 <= exitcond2_i_i_fu_1589_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_457 & ~(ap_const_lv1_0 == exitcond_flatten8_fu_682_p2))) begin
        exitcond_flatten4_reg_397 <= ap_const_lv1_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92) & (ap_const_lv1_0 == exitcond_flatten2_fu_1605_p2))) begin
        exitcond_flatten4_reg_397 <= exitcond_flatten1_fu_1594_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_436 & ~(ap_const_lv1_0 == exitcond_flatten_fu_604_p2))) begin
        i1_0_i_reg_375 <= ap_const_lv6_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond_flatten8_fu_682_p2) & ~ap_sig_bdd_457)) begin
        i1_0_i_reg_375 <= i1_0_i_mid2_fu_714_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92) & ~(ap_const_lv1_0 == exitcond_flatten2_fu_1605_p2))) begin
        i4_0_i_reg_497 <= ap_const_lv6_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_93) & (ap_const_lv1_0 == exitcond_flatten3_reg_2201) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & ~((ap_const_lv1_0 == exitcond_flatten3_reg_2201) & (ap_const_logic_0 == ap_sig_ioackin_OUTPUT_STREAM_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1)))) begin
        i4_0_i_reg_497 <= i4_0_i_mid2_reg_2210;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond_flatten_fu_604_p2) & ~ap_sig_bdd_436)) begin
        i_0_i_reg_342 <= i_0_i_mid2_fu_636_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_0_i_reg_342 <= ap_const_lv6_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_457 & ~(ap_const_lv1_0 == exitcond_flatten8_fu_682_p2))) begin
        indvar_flatten1_reg_464 <= ap_const_lv12_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92) & (ap_const_lv1_0 == exitcond_flatten2_fu_1605_p2))) begin
        indvar_flatten1_reg_464 <= indvar_flatten_next2_fu_1581_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_457 & ~(ap_const_lv1_0 == exitcond_flatten8_fu_682_p2))) begin
        indvar_flatten2_reg_475 <= ap_const_lv14_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92) & (ap_const_lv1_0 == exitcond_flatten2_fu_1605_p2))) begin
        indvar_flatten2_reg_475 <= indvar_flatten_next3_fu_1569_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92) & ~(ap_const_lv1_0 == exitcond_flatten2_fu_1605_p2))) begin
        indvar_flatten3_reg_486 <= ap_const_lv11_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_93) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & ~((ap_const_lv1_0 == exitcond_flatten3_reg_2201) & (ap_const_logic_0 == ap_sig_ioackin_OUTPUT_STREAM_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1)) & (ap_const_lv1_0 == exitcond_flatten3_fu_1611_p2))) begin
        indvar_flatten3_reg_486 <= indvar_flatten_next1_fu_1617_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_436 & ~(ap_const_lv1_0 == exitcond_flatten_fu_604_p2))) begin
        indvar_flatten6_reg_364 <= ap_const_lv11_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond_flatten8_fu_682_p2) & ~ap_sig_bdd_457)) begin
        indvar_flatten6_reg_364 <= indvar_flatten_next7_fu_688_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond_flatten_fu_604_p2) & ~ap_sig_bdd_436)) begin
        indvar_flatten_reg_331 <= indvar_flatten_next_fu_610_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        indvar_flatten_reg_331 <= ap_const_lv11_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_436 & ~(ap_const_lv1_0 == exitcond_flatten_fu_604_p2))) begin
        j2_0_i_reg_386 <= ap_const_lv6_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond_flatten8_fu_682_p2) & ~ap_sig_bdd_457)) begin
        j2_0_i_reg_386 <= j_1_fu_754_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92) & ~(ap_const_lv1_0 == exitcond_flatten2_fu_1605_p2))) begin
        j5_0_i_reg_508 <= ap_const_lv6_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_93) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & ~((ap_const_lv1_0 == exitcond_flatten3_reg_2201) & (ap_const_logic_0 == ap_sig_ioackin_OUTPUT_STREAM_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1)) & (ap_const_lv1_0 == exitcond_flatten3_fu_1611_p2))) begin
        j5_0_i_reg_508 <= j_2_fu_1706_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond_flatten_fu_604_p2) & ~ap_sig_bdd_436)) begin
        j_0_i_reg_353 <= j_fu_676_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        j_0_i_reg_353 <= ap_const_lv6_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_457 & ~(ap_const_lv1_0 == exitcond_flatten8_fu_682_p2))) begin
        p_0_i_i_reg_420 <= ap_const_lv6_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92) & (ap_const_lv1_0 == exitcond_flatten2_fu_1605_p2))) begin
        p_0_i_i_reg_420 <= p_0_i_i_mid2_reg_1760;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_457 & ~(ap_const_lv1_0 == exitcond_flatten8_fu_682_p2))) begin
        q_0_i_i_reg_431 <= ap_const_lv6_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92) & (ap_const_lv1_0 == exitcond_flatten2_fu_1605_p2))) begin
        q_0_i_i_reg_431 <= q_reg_1834;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_457 & ~(ap_const_lv1_0 == exitcond_flatten8_fu_682_p2))) begin
        speed1_reg_442 <= ap_const_lv4_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92) & (ap_const_lv1_0 == exitcond_flatten2_fu_1605_p2))) begin
        speed1_reg_442 <= speed_fu_1600_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_457 & ~(ap_const_lv1_0 == exitcond_flatten8_fu_682_p2))) begin
        speed_0_i_i_reg_453 <= ap_const_lv4_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92) & (ap_const_lv1_0 == exitcond_flatten2_fu_1605_p2))) begin
        speed_0_i_i_reg_453 <= speed_0_i_i_mid2_reg_1977;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        a_addr_1_reg_1971 <= tmp_89_fu_1001_p1;
        a_load_7_reg_1947 <= a_q1;
        a_load_8_reg_1954 <= a_q0;
        tmp_48_2_2_reg_1960 <= grp_fu_535_p1;
        tmp_89_reg_1965[0] <= tmp_89_fu_1001_p1[0];
tmp_89_reg_1965[1] <= tmp_89_fu_1001_p1[1];
tmp_89_reg_1965[2] <= tmp_89_fu_1001_p1[2];
tmp_89_reg_1965[3] <= tmp_89_fu_1001_p1[3];
tmp_89_reg_1965[4] <= tmp_89_fu_1001_p1[4];
tmp_89_reg_1965[5] <= tmp_89_fu_1001_p1[5];
tmp_89_reg_1965[6] <= tmp_89_fu_1001_p1[6];
tmp_89_reg_1965[7] <= tmp_89_fu_1001_p1[7];
tmp_89_reg_1965[8] <= tmp_89_fu_1001_p1[8];
tmp_89_reg_1965[9] <= tmp_89_fu_1001_p1[9];
tmp_89_reg_1965[10] <= tmp_89_fu_1001_p1[10];
tmp_89_reg_1965[11] <= tmp_89_fu_1001_p1[11];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        a_load_1_reg_1821 <= a_q0;
        a_load_2_reg_1827 <= a_q1;
        q_reg_1834 <= q_fu_893_p2;
        tmp_16_trn_cast1_reg_1816 <= tmp_16_trn_cast1_fu_890_p1;
        tmp_46_0_2_trn_cast_reg_1840[0] <= tmp_46_0_2_trn_cast_fu_898_p1[0];
tmp_46_0_2_trn_cast_reg_1840[1] <= tmp_46_0_2_trn_cast_fu_898_p1[1];
tmp_46_0_2_trn_cast_reg_1840[2] <= tmp_46_0_2_trn_cast_fu_898_p1[2];
tmp_46_0_2_trn_cast_reg_1840[3] <= tmp_46_0_2_trn_cast_fu_898_p1[3];
tmp_46_0_2_trn_cast_reg_1840[4] <= tmp_46_0_2_trn_cast_fu_898_p1[4];
tmp_46_0_2_trn_cast_reg_1840[5] <= tmp_46_0_2_trn_cast_fu_898_p1[5];
        tmp_53_reg_1851[5] <= tmp_53_fu_912_p3[5];
tmp_53_reg_1851[6] <= tmp_53_fu_912_p3[6];
tmp_53_reg_1851[7] <= tmp_53_fu_912_p3[7];
tmp_53_reg_1851[8] <= tmp_53_fu_912_p3[8];
tmp_53_reg_1851[9] <= tmp_53_fu_912_p3[9];
tmp_53_reg_1851[10] <= tmp_53_fu_912_p3[10];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == tmp_23_reg_1793) & (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        a_load_3_reg_1866 <= a_q1;
        tmp_48_0_2_reg_1872 <= grp_fu_535_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == tmp_52_reg_1810) & (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        a_load_4_reg_1877 <= a_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        a_load_5_reg_1914 <= a_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == tmp_52_reg_1810) & (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        a_load_6_reg_1921 <= a_q0;
        tmp_48_2_reg_1927 <= grp_fu_535_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        a_load_reg_1988 <= a_q1;
        speed_0_i_i_mid2_reg_1977 <= speed_0_i_i_mid2_fu_1005_p3;
        tmp_32_reg_1995 <= tmp_32_fu_1013_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        b_load_reg_2039 <= b_q0;
        tmp_77_reg_2034 <= grp_fu_540_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        exitcond2_i_i_mid_reg_1755 <= exitcond2_i_i_mid_fu_774_p2;
        p_0_i_i_mid2_reg_1760 <= p_0_i_i_mid2_fu_786_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_93) & ~((ap_const_lv1_0 == exitcond_flatten3_reg_2201) & (ap_const_logic_0 == ap_sig_ioackin_OUTPUT_STREAM_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1)))) begin
        exitcond_flatten3_reg_2201 <= exitcond_flatten3_fu_1611_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_93) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & ~((ap_const_lv1_0 == exitcond_flatten3_reg_2201) & (ap_const_logic_0 == ap_sig_ioackin_OUTPUT_STREAM_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1)) & (ap_const_lv1_0 == exitcond_flatten3_fu_1611_p2))) begin
        i4_0_i_mid2_reg_2210 <= i4_0_i_mid2_fu_1643_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_93) & ~((ap_const_lv1_0 == exitcond_flatten3_reg_2201) & (ap_const_logic_0 == ap_sig_ioackin_OUTPUT_STREAM_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1)) & (ap_const_lv1_0 == exitcond_flatten3_fu_1611_p2))) begin
        last_assign_reg_2220 <= last_assign_fu_1700_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        or_cond_i12_i_i_reg_2065 <= or_cond_i12_i_i_fu_1251_p2;
        tmp_93_reg_2071 <= tmp_93_fu_1256_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        p_addr10_reg_1904 <= p_addr10_fu_988_p2;
        p_addr4_reg_1894 <= p_addr4_fu_978_p2;
        p_addr8_reg_1899 <= p_addr8_fu_983_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        p_addr4_cast_reg_1783[5] <= p_addr4_cast_fu_844_p1[5];
p_addr4_cast_reg_1783[6] <= p_addr4_cast_fu_844_p1[6];
p_addr4_cast_reg_1783[7] <= p_addr4_cast_fu_844_p1[7];
p_addr4_cast_reg_1783[8] <= p_addr4_cast_fu_844_p1[8];
p_addr4_cast_reg_1783[9] <= p_addr4_cast_fu_844_p1[9];
p_addr4_cast_reg_1783[10] <= p_addr4_cast_fu_844_p1[10];
p_addr4_cast_reg_1783[11] <= p_addr4_cast_fu_844_p1[11];
        q_0_i_i_mid2_reg_1768 <= q_0_i_i_mid2_fu_799_p3;
        tmp_11_reg_1778 <= tmp_10_fu_818_p2[ap_const_lv32_5];
        tmp_23_reg_1793 <= x_assign_fu_807_p2[ap_const_lv32_5];
        tmp_52_0_1_trn_cast_reg_1799[0] <= tmp_52_0_1_trn_cast_fu_867_p1[0];
tmp_52_0_1_trn_cast_reg_1799[1] <= tmp_52_0_1_trn_cast_fu_867_p1[1];
tmp_52_0_1_trn_cast_reg_1799[2] <= tmp_52_0_1_trn_cast_fu_867_p1[2];
tmp_52_0_1_trn_cast_reg_1799[3] <= tmp_52_0_1_trn_cast_fu_867_p1[3];
tmp_52_0_1_trn_cast_reg_1799[4] <= tmp_52_0_1_trn_cast_fu_867_p1[4];
tmp_52_0_1_trn_cast_reg_1799[5] <= tmp_52_0_1_trn_cast_fu_867_p1[5];
        tmp_52_reg_1810 <= y_assign_fu_812_p2[ap_const_lv32_5];
        y_assign_reg_1773 <= y_assign_fu_812_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (tmp_11_reg_1778 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24) & (ap_const_lv1_0 == tmp_23_reg_1793)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & (ap_const_lv1_0 == tmp_52_reg_1810)) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_53) | ((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79) & (ap_const_lv1_0 == tmp_32_reg_1995)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79) & ~(ap_const_lv1_0 == tmp_32_reg_1995)))) begin
        reg_562 <= grp_fu_535_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & (ap_const_lv1_0 == tmp_32_fu_1013_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & ~(ap_const_lv1_0 == tmp_32_fu_1013_p2)))) begin
        reg_568 <= grp_fu_535_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((tmp_11_reg_1778 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) | ((ap_const_lv1_0 == tmp_23_reg_1793) & (ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) | ((ap_const_lv1_0 == tmp_52_reg_1810) & (ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) | ((ap_const_lv1_0 == tmp_32_reg_1995) & (ap_const_logic_1 == ap_sig_cseq_ST_st86_fsm_85)) | (~(ap_const_lv1_0 == tmp_32_reg_1995) & (ap_const_logic_1 == ap_sig_cseq_ST_st86_fsm_85)))) begin
        reg_573 <= grp_fu_552_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) | (ap_const_logic_1 == ap_sig_cseq_ST_st74_fsm_73) | (ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78))) begin
        reg_578 <= grp_fu_520_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) | ((ap_const_lv1_0 == tmp_23_reg_1793) & (ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) | (ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40) | (ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_52) | (ap_const_logic_1 == ap_sig_cseq_ST_st65_fsm_64))) begin
        reg_585 <= grp_fu_520_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((tmp_11_reg_1778 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) | ((ap_const_lv1_0 == tmp_23_reg_1793) & (ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29)) | ((ap_const_lv1_0 == tmp_52_reg_1810) & (ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_46)) | (ap_const_logic_1 == ap_sig_cseq_ST_st59_fsm_58) | ((ap_const_lv1_0 == tmp_32_reg_1995) & (ap_const_logic_1 == ap_sig_cseq_ST_st91_fsm_90)) | (~(ap_const_lv1_0 == tmp_32_reg_1995) & (ap_const_logic_1 == ap_sig_cseq_ST_st91_fsm_90)))) begin
        reg_592 <= grp_fu_547_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st60_fsm_59) | ((ap_const_lv1_0 == tmp_32_reg_1995) & (ap_const_logic_1 == ap_sig_cseq_ST_st92_fsm_91)) | (~(ap_const_lv1_0 == tmp_32_reg_1995) & (ap_const_logic_1 == ap_sig_cseq_ST_st92_fsm_91)))) begin
        reg_597 <= grp_fu_532_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        sum_4_i_i_0_2_reg_2121 <= sum_4_i_i_0_2_fu_1409_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        sum_4_i_i_1_reg_2137 <= sum_4_i_i_1_fu_1462_p3;
        tmp_63_reg_2142 <= tmp_63_fu_1503_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        sum_4_i_i_2_reg_2152 <= sum_4_i_i_2_fu_1515_p3;
        tmp_73_reg_2157 <= tmp_73_fu_1557_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        sum_4_i_i_reg_2089 <= sum_4_i_i_fu_1301_p3;
        tmp_99_reg_2101 <= grp_fu_540_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        tmp_14_reg_2019 <= grp_fu_526_p2;
        tmp_72_reg_2014 <= grp_fu_540_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((tmp_11_reg_1778 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        tmp_18_reg_1861 <= grp_fu_540_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((tmp_11_reg_1778 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12))) begin
        tmp_21_reg_2009 <= tmp_21_fu_1059_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st69_fsm_68)) begin
        tmp_27_reg_2167 <= grp_fu_526_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        tmp_31_reg_2116 <= grp_fu_526_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == tmp_23_reg_1793) & (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        tmp_44_reg_1909 <= grp_fu_540_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == tmp_23_reg_1793) & (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18))) begin
        tmp_45_reg_2096 <= tmp_45_fu_1343_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == tmp_23_reg_1793) & (ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13))) begin
        tmp_49_0_2_reg_2029 <= tmp_49_0_2_fu_1107_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        tmp_49_2_2_reg_2055 <= tmp_49_2_2_fu_1203_p3;
        tmp_91_reg_2060 <= tmp_91_fu_1211_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == tmp_52_reg_1810) & (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        tmp_49_2_reg_2045 <= tmp_49_2_fu_1155_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == tmp_23_reg_1793) & (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        tmp_50_reg_1942 <= grp_fu_540_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == tmp_52_reg_1810) & (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9))) begin
        tmp_57_reg_1983 <= grp_fu_540_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == tmp_52_reg_1810) & (ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30))) begin
        tmp_58_reg_2127 <= tmp_58_fu_1450_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        tmp_62_reg_1999 <= grp_fu_540_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == tmp_52_reg_1810) & (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        tmp_67_reg_2004 <= grp_fu_540_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        tmp_82_reg_2050 <= grp_fu_540_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        x_assign_1_reg_2077[19] <= x_assign_1_fu_1285_p3[19];
x_assign_1_reg_2077[22] <= x_assign_1_fu_1285_p3[22];
x_assign_1_reg_2077[23] <= x_assign_1_fu_1285_p3[23];
x_assign_1_reg_2077[25] <= x_assign_1_fu_1285_p3[25];
x_assign_1_reg_2077[30] <= x_assign_1_fu_1285_p3[30];
x_assign_1_reg_2077[31] <= x_assign_1_fu_1285_p3[31];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        x_assign_2_reg_2111[19] <= x_assign_2_fu_1395_p3[19];
x_assign_2_reg_2111[22] <= x_assign_2_fu_1395_p3[22];
x_assign_2_reg_2111[23] <= x_assign_2_fu_1395_p3[23];
x_assign_2_reg_2111[25] <= x_assign_2_fu_1395_p3[25];
x_assign_2_reg_2111[30] <= x_assign_2_fu_1395_p3[30];
x_assign_2_reg_2111[31] <= x_assign_2_fu_1395_p3[31];
    end
end

/// INPUT_STREAM_TREADY assign process. ///
always @ (exitcond_flatten_fu_604_p2 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_436 or exitcond_flatten8_fu_682_p2 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_bdd_457)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond_flatten_fu_604_p2) & ~ap_sig_bdd_436) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond_flatten8_fu_682_p2) & ~ap_sig_bdd_457))) begin
        INPUT_STREAM_TREADY = ap_const_logic_1;
    end else begin
        INPUT_STREAM_TREADY = ap_const_logic_0;
    end
end

/// OUTPUT_STREAM_TVALID assign process. ///
always @ (exitcond_flatten3_reg_2201 or ap_sig_cseq_ST_pp3_stg0_fsm_93 or ap_reg_ppiten_pp3_it1 or ap_reg_ioackin_OUTPUT_STREAM_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_93) & (ap_const_lv1_0 == exitcond_flatten3_reg_2201) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & (ap_const_logic_0 == ap_reg_ioackin_OUTPUT_STREAM_TREADY))) begin
        OUTPUT_STREAM_TVALID = ap_const_logic_1;
    end else begin
        OUTPUT_STREAM_TVALID = ap_const_logic_0;
    end
end

/// a_address0 assign process. ///
always @ (ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or a_addr_1_reg_1971 or ap_sig_cseq_ST_st93_fsm_92 or tmp_3_fu_671_p1 or tmp_13_fu_854_p1 or tmp_55_fu_929_p1 or tmp_80_fu_973_p1 or tmp_86_fu_997_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92)) begin
        a_address0 = a_addr_1_reg_1971;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        a_address0 = tmp_3_fu_671_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        a_address0 = tmp_86_fu_997_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        a_address0 = tmp_80_fu_973_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        a_address0 = tmp_55_fu_929_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        a_address0 = tmp_13_fu_854_p1;
    end else begin
        a_address0 = 'bx;
    end
end

/// a_address1 assign process. ///
always @ (ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st9_fsm_8 or tmp_89_fu_1001_p1 or tmp_24_fu_877_p1 or tmp_46_fu_907_p1 or tmp_65_fu_942_p1 or tmp_84_fu_993_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        a_address1 = tmp_89_fu_1001_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        a_address1 = tmp_84_fu_993_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        a_address1 = tmp_65_fu_942_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        a_address1 = tmp_46_fu_907_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        a_address1 = tmp_24_fu_877_p1;
    end else begin
        a_address1 = 'bx;
    end
end

/// a_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_436 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st93_fsm_92)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_436) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92))) begin
        a_ce0 = ap_const_logic_1;
    end else begin
        a_ce0 = ap_const_logic_0;
    end
end

/// a_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st9_fsm_8)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        a_ce1 = ap_const_logic_1;
    end else begin
        a_ce1 = ap_const_logic_0;
    end
end

/// a_d0 assign process. ///
always @ (reg_597 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st93_fsm_92 or ret_fu_644_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92)) begin
        a_d0 = reg_597;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        a_d0 = ret_fu_644_p1;
    end else begin
        a_d0 = 'bx;
    end
end

/// a_we0 assign process. ///
always @ (tmp_32_reg_1995 or exitcond_flatten_fu_604_p2 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_436 or ap_sig_cseq_ST_st93_fsm_92)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond_flatten_fu_604_p2) & ~ap_sig_bdd_436) | ((ap_const_lv1_0 == tmp_32_reg_1995) & (ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92)))) begin
        a_we0 = ap_const_logic_1;
    end else begin
        a_we0 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_sig_cseq_ST_st96_fsm_94)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st96_fsm_94)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st96_fsm_94)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st96_fsm_94)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp3_stg0_fsm_93 assign process. ///
always @ (ap_sig_bdd_757)
begin
    if (ap_sig_bdd_757) begin
        ap_sig_cseq_ST_pp3_stg0_fsm_93 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg0_fsm_93 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_243)
begin
    if (ap_sig_bdd_243) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_10 assign process. ///
always @ (ap_sig_bdd_587)
begin
    if (ap_sig_bdd_587) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_11 assign process. ///
always @ (ap_sig_bdd_258)
begin
    if (ap_sig_bdd_258) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_12 assign process. ///
always @ (ap_sig_bdd_266)
begin
    if (ap_sig_bdd_266) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_275)
begin
    if (ap_sig_bdd_275) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st15_fsm_14 assign process. ///
always @ (ap_sig_bdd_284)
begin
    if (ap_sig_bdd_284) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st16_fsm_15 assign process. ///
always @ (ap_sig_bdd_322)
begin
    if (ap_sig_bdd_322) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st17_fsm_16 assign process. ///
always @ (ap_sig_bdd_620)
begin
    if (ap_sig_bdd_620) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st18_fsm_17 assign process. ///
always @ (ap_sig_bdd_364)
begin
    if (ap_sig_bdd_364) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st19_fsm_18 assign process. ///
always @ (ap_sig_bdd_635)
begin
    if (ap_sig_bdd_635) begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_136)
begin
    if (ap_sig_bdd_136) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st20_fsm_19 assign process. ///
always @ (ap_sig_bdd_648)
begin
    if (ap_sig_bdd_648) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_20 assign process. ///
always @ (ap_sig_bdd_659)
begin
    if (ap_sig_bdd_659) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st24_fsm_23 assign process. ///
always @ (ap_sig_bdd_329)
begin
    if (ap_sig_bdd_329) begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st25_fsm_24 assign process. ///
always @ (ap_sig_bdd_198)
begin
    if (ap_sig_bdd_198) begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st26_fsm_25 assign process. ///
always @ (ap_sig_bdd_994)
begin
    if (ap_sig_bdd_994) begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_431)
begin
    if (ap_sig_bdd_431) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st30_fsm_29 assign process. ///
always @ (ap_sig_bdd_372)
begin
    if (ap_sig_bdd_372) begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st31_fsm_30 assign process. ///
always @ (ap_sig_bdd_668)
begin
    if (ap_sig_bdd_668) begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st32_fsm_31 assign process. ///
always @ (ap_sig_bdd_680)
begin
    if (ap_sig_bdd_680) begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st36_fsm_35 assign process. ///
always @ (ap_sig_bdd_690)
begin
    if (ap_sig_bdd_690) begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st37_fsm_36 assign process. ///
always @ (ap_sig_bdd_701)
begin
    if (ap_sig_bdd_701) begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_453)
begin
    if (ap_sig_bdd_453) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st41_fsm_40 assign process. ///
always @ (ap_sig_bdd_338)
begin
    if (ap_sig_bdd_338) begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st42_fsm_41 assign process. ///
always @ (ap_sig_bdd_209)
begin
    if (ap_sig_bdd_209) begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st43_fsm_42 assign process. ///
always @ (ap_sig_bdd_1001)
begin
    if (ap_sig_bdd_1001) begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st47_fsm_46 assign process. ///
always @ (ap_sig_bdd_381)
begin
    if (ap_sig_bdd_381) begin
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st48_fsm_47 assign process. ///
always @ (ap_sig_bdd_710)
begin
    if (ap_sig_bdd_710) begin
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st49_fsm_48 assign process. ///
always @ (ap_sig_bdd_721)
begin
    if (ap_sig_bdd_721) begin
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_474)
begin
    if (ap_sig_bdd_474) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st53_fsm_52 assign process. ///
always @ (ap_sig_bdd_346)
begin
    if (ap_sig_bdd_346) begin
        ap_sig_cseq_ST_st53_fsm_52 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st53_fsm_52 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st54_fsm_53 assign process. ///
always @ (ap_sig_bdd_220)
begin
    if (ap_sig_bdd_220) begin
        ap_sig_cseq_ST_st54_fsm_53 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st54_fsm_53 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st55_fsm_54 assign process. ///
always @ (ap_sig_bdd_1009)
begin
    if (ap_sig_bdd_1009) begin
        ap_sig_cseq_ST_st55_fsm_54 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st55_fsm_54 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st59_fsm_58 assign process. ///
always @ (ap_sig_bdd_390)
begin
    if (ap_sig_bdd_390) begin
        ap_sig_cseq_ST_st59_fsm_58 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st59_fsm_58 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_485)
begin
    if (ap_sig_bdd_485) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st60_fsm_59 assign process. ///
always @ (ap_sig_bdd_411)
begin
    if (ap_sig_bdd_411) begin
        ap_sig_cseq_ST_st60_fsm_59 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st60_fsm_59 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st61_fsm_60 assign process. ///
always @ (ap_sig_bdd_931)
begin
    if (ap_sig_bdd_931) begin
        ap_sig_cseq_ST_st61_fsm_60 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st61_fsm_60 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st65_fsm_64 assign process. ///
always @ (ap_sig_bdd_354)
begin
    if (ap_sig_bdd_354) begin
        ap_sig_cseq_ST_st65_fsm_64 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st65_fsm_64 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st66_fsm_65 assign process. ///
always @ (ap_sig_bdd_955)
begin
    if (ap_sig_bdd_955) begin
        ap_sig_cseq_ST_st66_fsm_65 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st66_fsm_65 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st69_fsm_68 assign process. ///
always @ (ap_sig_bdd_729)
begin
    if (ap_sig_bdd_729) begin
        ap_sig_cseq_ST_st69_fsm_68 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st69_fsm_68 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_187)
begin
    if (ap_sig_bdd_187) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st70_fsm_69 assign process. ///
always @ (ap_sig_bdd_938)
begin
    if (ap_sig_bdd_938) begin
        ap_sig_cseq_ST_st70_fsm_69 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st70_fsm_69 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st74_fsm_73 assign process. ///
always @ (ap_sig_bdd_305)
begin
    if (ap_sig_bdd_305) begin
        ap_sig_cseq_ST_st74_fsm_73 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st74_fsm_73 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st75_fsm_74 assign process. ///
always @ (ap_sig_bdd_945)
begin
    if (ap_sig_bdd_945) begin
        ap_sig_cseq_ST_st75_fsm_74 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st75_fsm_74 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st79_fsm_78 assign process. ///
always @ (ap_sig_bdd_313)
begin
    if (ap_sig_bdd_313) begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_525)
begin
    if (ap_sig_bdd_525) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st80_fsm_79 assign process. ///
always @ (ap_sig_bdd_228)
begin
    if (ap_sig_bdd_228) begin
        ap_sig_cseq_ST_st80_fsm_79 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st80_fsm_79 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st81_fsm_80 assign process. ///
always @ (ap_sig_bdd_1031)
begin
    if (ap_sig_bdd_1031) begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st86_fsm_85 assign process. ///
always @ (ap_sig_bdd_292)
begin
    if (ap_sig_bdd_292) begin
        ap_sig_cseq_ST_st86_fsm_85 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st86_fsm_85 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st87_fsm_86 assign process. ///
always @ (ap_sig_bdd_1017)
begin
    if (ap_sig_bdd_1017) begin
        ap_sig_cseq_ST_st87_fsm_86 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st87_fsm_86 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_549)
begin
    if (ap_sig_bdd_549) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st91_fsm_90 assign process. ///
always @ (ap_sig_bdd_398)
begin
    if (ap_sig_bdd_398) begin
        ap_sig_cseq_ST_st91_fsm_90 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st91_fsm_90 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st92_fsm_91 assign process. ///
always @ (ap_sig_bdd_418)
begin
    if (ap_sig_bdd_418) begin
        ap_sig_cseq_ST_st92_fsm_91 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st92_fsm_91 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st93_fsm_92 assign process. ///
always @ (ap_sig_bdd_738)
begin
    if (ap_sig_bdd_738) begin
        ap_sig_cseq_ST_st93_fsm_92 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st93_fsm_92 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st96_fsm_94 assign process. ///
always @ (ap_sig_bdd_1778)
begin
    if (ap_sig_bdd_1778) begin
        ap_sig_cseq_ST_st96_fsm_94 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st96_fsm_94 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_566)
begin
    if (ap_sig_bdd_566) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// ap_sig_ioackin_OUTPUT_STREAM_TREADY assign process. ///
always @ (OUTPUT_STREAM_TREADY or ap_reg_ioackin_OUTPUT_STREAM_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_OUTPUT_STREAM_TREADY)) begin
        ap_sig_ioackin_OUTPUT_STREAM_TREADY = OUTPUT_STREAM_TREADY;
    end else begin
        ap_sig_ioackin_OUTPUT_STREAM_TREADY = ap_const_logic_1;
    end
end

/// b_address0 assign process. ///
always @ (ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st3_fsm_2 or tmp_89_reg_1965 or tmp_6_fu_749_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        b_address0 = tmp_6_fu_749_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        b_address0 = tmp_89_reg_1965;
    end else begin
        b_address0 = 'bx;
    end
end

/// b_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_bdd_457)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_457))) begin
        b_ce0 = ap_const_logic_1;
    end else begin
        b_ce0 = ap_const_logic_0;
    end
end

/// b_we0 assign process. ///
always @ (exitcond_flatten8_fu_682_p2 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_bdd_457)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond_flatten8_fu_682_p2) & ~ap_sig_bdd_457)) begin
        b_we0 = ap_const_logic_1;
    end else begin
        b_we0 = ap_const_logic_0;
    end
end

/// grp_fu_520_opcode assign process. ///
always @ (tmp_23_reg_1793 or tmp_52_reg_1810 or ap_sig_cseq_ST_st12_fsm_11 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st20_fsm_19 or ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st37_fsm_36 or ap_sig_cseq_ST_st49_fsm_48 or ap_sig_cseq_ST_st61_fsm_60 or ap_sig_cseq_ST_st70_fsm_69 or ap_sig_cseq_ST_st75_fsm_74)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_69) | (ap_const_logic_1 == ap_sig_cseq_ST_st75_fsm_74))) begin
        grp_fu_520_opcode = ap_const_lv2_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) | ((ap_const_lv1_0 == tmp_23_reg_1793) & (ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) | ((ap_const_lv1_0 == tmp_52_reg_1810) & (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31)) | (ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36) | (ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48) | (ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_60))) begin
        grp_fu_520_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_520_opcode = 'bx;
    end
end

/// grp_fu_520_p0 assign process. ///
always @ (ap_sig_cseq_ST_st12_fsm_11 or reg_578 or a_load_reg_1988 or ap_sig_cseq_ST_st11_fsm_10 or sum_4_i_i_reg_2089 or ap_sig_cseq_ST_st20_fsm_19 or x_assign_2_reg_2111 or sum_4_i_i_0_2_reg_2121 or ap_sig_cseq_ST_st32_fsm_31 or sum_4_i_i_1_reg_2137 or ap_sig_cseq_ST_st37_fsm_36 or sum_4_i_i_2_reg_2152 or ap_sig_cseq_ST_st49_fsm_48 or tmp_27_reg_2167 or ap_sig_cseq_ST_st61_fsm_60 or ap_sig_cseq_ST_st70_fsm_69 or ap_sig_cseq_ST_st75_fsm_74)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st75_fsm_74)) begin
        grp_fu_520_p0 = reg_578;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_69)) begin
        grp_fu_520_p0 = tmp_27_reg_2167;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_60)) begin
        grp_fu_520_p0 = x_assign_2_reg_2111;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        grp_fu_520_p0 = sum_4_i_i_2_reg_2152;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        grp_fu_520_p0 = sum_4_i_i_1_reg_2137;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        grp_fu_520_p0 = sum_4_i_i_0_2_reg_2121;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        grp_fu_520_p0 = sum_4_i_i_reg_2089;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        grp_fu_520_p0 = a_load_reg_1988;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        grp_fu_520_p0 = ap_const_lv32_3F800000;
    end else begin
        grp_fu_520_p0 = 'bx;
    end
end

/// grp_fu_520_p1 assign process. ///
always @ (ap_sig_cseq_ST_st12_fsm_11 or reg_597 or a_load_reg_1988 or ap_sig_cseq_ST_st11_fsm_10 or tmp_14_reg_2019 or x_assign_6_0_1_fu_1348_p3 or ap_sig_cseq_ST_st20_fsm_19 or tmp_31_reg_2116 or x_assign_6_1_fu_1455_p3 or ap_sig_cseq_ST_st32_fsm_31 or x_assign_6_1_2_fu_1508_p3 or ap_sig_cseq_ST_st37_fsm_36 or x_assign_6_2_1_fu_1562_p3 or ap_sig_cseq_ST_st49_fsm_48 or ap_sig_cseq_ST_st61_fsm_60 or ap_sig_cseq_ST_st70_fsm_69 or ap_sig_cseq_ST_st75_fsm_74)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st75_fsm_74)) begin
        grp_fu_520_p1 = tmp_31_reg_2116;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_69)) begin
        grp_fu_520_p1 = tmp_14_reg_2019;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_60)) begin
        grp_fu_520_p1 = reg_597;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        grp_fu_520_p1 = x_assign_6_2_1_fu_1562_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        grp_fu_520_p1 = x_assign_6_1_2_fu_1508_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        grp_fu_520_p1 = x_assign_6_1_fu_1455_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        grp_fu_520_p1 = x_assign_6_0_1_fu_1348_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        grp_fu_520_p1 = ap_const_lv32_3F800000;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        grp_fu_520_p1 = a_load_reg_1988;
    end else begin
        grp_fu_520_p1 = 'bx;
    end
end

/// grp_fu_526_p0 assign process. ///
always @ (ap_sig_cseq_ST_st10_fsm_9 or reg_578 or reg_585 or ap_sig_cseq_ST_st18_fsm_17 or a_q1 or ap_sig_cseq_ST_st66_fsm_65)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st66_fsm_65)) begin
        grp_fu_526_p0 = reg_578;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        grp_fu_526_p0 = reg_585;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_fu_526_p0 = a_q1;
    end else begin
        grp_fu_526_p0 = 'bx;
    end
end

/// grp_fu_526_p1 assign process. ///
always @ (ap_sig_cseq_ST_st10_fsm_9 or reg_585 or ap_sig_cseq_ST_st18_fsm_17 or output_0_i13_i_i_fu_1293_p3 or ap_sig_cseq_ST_st66_fsm_65)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st66_fsm_65)) begin
        grp_fu_526_p1 = reg_585;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        grp_fu_526_p1 = output_0_i13_i_i_fu_1293_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_fu_526_p1 = ap_const_lv32_41200000;
    end else begin
        grp_fu_526_p1 = 'bx;
    end
end

/// grp_fu_535_p0 assign process. ///
always @ (ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st42_fsm_41 or ap_sig_cseq_ST_st54_fsm_53 or ap_sig_cseq_ST_st80_fsm_79 or tmp_32_reg_1995 or ap_sig_cseq_ST_st10_fsm_9 or tmp_32_fu_1013_p2 or reg_578 or reg_585 or a_q0 or a_q1 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st9_fsm_8 or sum_4_i_i_0_1_fu_1402_p3)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79) & (ap_const_lv1_0 == tmp_32_reg_1995)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79) & ~(ap_const_lv1_0 == tmp_32_reg_1995)))) begin
        grp_fu_535_p0 = reg_578;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_53))) begin
        grp_fu_535_p0 = reg_585;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        grp_fu_535_p0 = sum_4_i_i_0_1_fu_1402_p3;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & (ap_const_lv1_0 == tmp_32_fu_1013_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & ~(ap_const_lv1_0 == tmp_32_fu_1013_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        grp_fu_535_p0 = a_q1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        grp_fu_535_p0 = a_q0;
    end else begin
        grp_fu_535_p0 = 'bx;
    end
end

/// grp_fu_540_opcode assign process. ///
always @ (tmp_11_reg_1778 or tmp_23_reg_1793 or tmp_52_reg_1810 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st12_fsm_11 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st16_fsm_15 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st19_fsm_18)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) | (ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) | (ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        grp_fu_540_opcode = ap_const_lv5_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | (ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) | ((tmp_11_reg_1778 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) | ((ap_const_lv1_0 == tmp_23_reg_1793) & (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) | ((ap_const_lv1_0 == tmp_23_reg_1793) & (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) | ((ap_const_lv1_0 == tmp_52_reg_1810) & (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | ((ap_const_lv1_0 == tmp_52_reg_1810) & (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) | (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18))) begin
        grp_fu_540_opcode = ap_const_lv5_2;
    end else begin
        grp_fu_540_opcode = 'bx;
    end
end

/// grp_fu_540_p0 assign process. ///
always @ (ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st12_fsm_11 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st16_fsm_15 or a_load_1_reg_1821 or a_load_2_reg_1827 or ap_sig_cseq_ST_st7_fsm_6 or a_load_3_reg_1866 or a_load_4_reg_1877 or ap_sig_cseq_ST_st8_fsm_7 or a_load_5_reg_1914 or a_load_6_reg_1921 or ap_sig_cseq_ST_st9_fsm_8 or a_load_7_reg_1947 or a_load_8_reg_1954 or ap_sig_cseq_ST_st11_fsm_10 or b_load_reg_2039 or ap_sig_cseq_ST_st17_fsm_16 or x_assign_1_reg_2077 or ap_sig_cseq_ST_st19_fsm_18)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        grp_fu_540_p0 = x_assign_1_reg_2077;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) | (ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) | (ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        grp_fu_540_p0 = b_load_reg_2039;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_540_p0 = a_load_8_reg_1954;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        grp_fu_540_p0 = a_load_7_reg_1947;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        grp_fu_540_p0 = a_load_6_reg_1921;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        grp_fu_540_p0 = a_load_5_reg_1914;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_fu_540_p0 = a_load_4_reg_1877;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_fu_540_p0 = a_load_3_reg_1866;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_fu_540_p0 = a_load_2_reg_1827;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_540_p0 = a_load_1_reg_1821;
    end else begin
        grp_fu_540_p0 = 'bx;
    end
end

/// grp_fu_540_p1 assign process. ///
always @ (ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st12_fsm_11 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st16_fsm_15 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st19_fsm_18)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        grp_fu_540_p1 = ap_const_lv32_40800000;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        grp_fu_540_p1 = ap_const_lv32_40E00000;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) | (ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | (ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18))) begin
        grp_fu_540_p1 = ap_const_lv32_0;
    end else begin
        grp_fu_540_p1 = 'bx;
    end
end

/// grp_fu_547_p0 assign process. ///
always @ (reg_562 or tmp_32_reg_1995 or reg_568 or ap_sig_cseq_ST_st14_fsm_13 or tmp_21_reg_2009 or ap_sig_cseq_ST_st26_fsm_25 or ap_sig_cseq_ST_st43_fsm_42 or ap_sig_cseq_ST_st55_fsm_54 or ap_sig_cseq_ST_st87_fsm_86)
begin
    if ((((ap_const_lv1_0 == tmp_32_reg_1995) & (ap_const_logic_1 == ap_sig_cseq_ST_st87_fsm_86)) | (~(ap_const_lv1_0 == tmp_32_reg_1995) & (ap_const_logic_1 == ap_sig_cseq_ST_st87_fsm_86)))) begin
        grp_fu_547_p0 = reg_568;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25) | (ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_54))) begin
        grp_fu_547_p0 = reg_562;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_547_p0 = tmp_21_reg_2009;
    end else begin
        grp_fu_547_p0 = 'bx;
    end
end

/// grp_fu_547_p1 assign process. ///
always @ (tmp_32_reg_1995 or reg_573 or ap_sig_cseq_ST_st14_fsm_13 or tmp_49_0_2_reg_2029 or tmp_49_2_reg_2045 or tmp_49_2_2_reg_2055 or ap_sig_cseq_ST_st26_fsm_25 or ap_sig_cseq_ST_st43_fsm_42 or ap_sig_cseq_ST_st55_fsm_54 or ap_sig_cseq_ST_st87_fsm_86)
begin
    if ((((ap_const_lv1_0 == tmp_32_reg_1995) & (ap_const_logic_1 == ap_sig_cseq_ST_st87_fsm_86)) | (~(ap_const_lv1_0 == tmp_32_reg_1995) & (ap_const_logic_1 == ap_sig_cseq_ST_st87_fsm_86)))) begin
        grp_fu_547_p1 = reg_573;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_54)) begin
        grp_fu_547_p1 = tmp_49_2_2_reg_2055;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        grp_fu_547_p1 = tmp_49_2_reg_2045;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        grp_fu_547_p1 = tmp_49_0_2_reg_2029;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_547_p1 = ap_const_lv64_0;
    end else begin
        grp_fu_547_p1 = 'bx;
    end
end

/// grp_fu_552_p0 assign process. ///
always @ (reg_562 or tmp_32_reg_1995 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st7_fsm_6 or tmp_48_0_2_reg_1872 or ap_sig_cseq_ST_st8_fsm_7 or tmp_48_2_reg_1927 or ap_sig_cseq_ST_st9_fsm_8 or tmp_48_2_2_reg_1960 or ap_sig_cseq_ST_st81_fsm_80)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_fu_552_p0 = tmp_48_2_2_reg_1960;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_fu_552_p0 = tmp_48_2_reg_1927;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_fu_552_p0 = tmp_48_0_2_reg_1872;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | ((ap_const_lv1_0 == tmp_32_reg_1995) & (ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80)) | (~(ap_const_lv1_0 == tmp_32_reg_1995) & (ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80)))) begin
        grp_fu_552_p0 = reg_562;
    end else begin
        grp_fu_552_p0 = 'bx;
    end
end

/// grp_fu_552_p1 assign process. ///
always @ (tmp_32_reg_1995 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st81_fsm_80)
begin
    if ((((ap_const_lv1_0 == tmp_32_reg_1995) & (ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80)) | (~(ap_const_lv1_0 == tmp_32_reg_1995) & (ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80)))) begin
        grp_fu_552_p1 = ap_const_lv64_3F847AE147AE147B;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        grp_fu_552_p1 = ap_const_lv64_3FE6A09EDBF8B9BB;
    end else begin
        grp_fu_552_p1 = 'bx;
    end
end

/// i4_0_i_phi_fu_501_p4 assign process. ///
always @ (i4_0_i_reg_497 or exitcond_flatten3_reg_2201 or ap_sig_cseq_ST_pp3_stg0_fsm_93 or ap_reg_ppiten_pp3_it1 or i4_0_i_mid2_reg_2210)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_93) & (ap_const_lv1_0 == exitcond_flatten3_reg_2201) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1))) begin
        i4_0_i_phi_fu_501_p4 = i4_0_i_mid2_reg_2210;
    end else begin
        i4_0_i_phi_fu_501_p4 = i4_0_i_reg_497;
    end
end

/// out_address0 assign process. ///
always @ (tmp_89_reg_1965 or ap_sig_cseq_ST_st93_fsm_92 or ap_sig_cseq_ST_pp3_stg0_fsm_93 or ap_reg_ppiten_pp3_it0 or tmp_103_fu_1695_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92)) begin
        out_address0 = tmp_89_reg_1965;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_93) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it0))) begin
        out_address0 = tmp_103_fu_1695_p1;
    end else begin
        out_address0 = 'bx;
    end
end

/// out_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st93_fsm_92 or exitcond_flatten3_reg_2201 or ap_sig_cseq_ST_pp3_stg0_fsm_93 or ap_reg_ppiten_pp3_it0 or ap_sig_ioackin_OUTPUT_STREAM_TREADY or ap_reg_ppiten_pp3_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_93) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & ~((ap_const_lv1_0 == exitcond_flatten3_reg_2201) & (ap_const_logic_0 == ap_sig_ioackin_OUTPUT_STREAM_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1))))) begin
        out_ce0 = ap_const_logic_1;
    end else begin
        out_ce0 = ap_const_logic_0;
    end
end

/// out_we0 assign process. ///
always @ (tmp_32_reg_1995 or ap_sig_cseq_ST_st93_fsm_92)
begin
    if ((~(ap_const_lv1_0 == tmp_32_reg_1995) & (ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92))) begin
        out_we0 = ap_const_logic_1;
    end else begin
        out_we0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond_flatten_fu_604_p2 or ap_sig_bdd_436 or exitcond_flatten8_fu_682_p2 or ap_sig_bdd_457 or exitcond_flatten2_fu_1605_p2 or exitcond_flatten3_fu_1611_p2 or exitcond_flatten3_reg_2201 or ap_reg_ppiten_pp3_it0 or ap_sig_ioackin_OUTPUT_STREAM_TREADY or ap_reg_ppiten_pp3_it1)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (((ap_const_lv1_0 == exitcond_flatten_fu_604_p2) & ~ap_sig_bdd_436)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if ((~ap_sig_bdd_436 & ~(ap_const_lv1_0 == exitcond_flatten_fu_604_p2))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (((ap_const_lv1_0 == exitcond_flatten8_fu_682_p2) & ~ap_sig_bdd_457)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else if ((~ap_sig_bdd_457 & ~(ap_const_lv1_0 == exitcond_flatten8_fu_682_p2))) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st71_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : 
        begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : 
        begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : 
        begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : 
        begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : 
        begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : 
        begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st79_fsm_78 : 
        begin
            ap_NS_fsm = ap_ST_st80_fsm_79;
        end
        ap_ST_st80_fsm_79 : 
        begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st81_fsm_80 : 
        begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st82_fsm_81 : 
        begin
            ap_NS_fsm = ap_ST_st83_fsm_82;
        end
        ap_ST_st83_fsm_82 : 
        begin
            ap_NS_fsm = ap_ST_st84_fsm_83;
        end
        ap_ST_st84_fsm_83 : 
        begin
            ap_NS_fsm = ap_ST_st85_fsm_84;
        end
        ap_ST_st85_fsm_84 : 
        begin
            ap_NS_fsm = ap_ST_st86_fsm_85;
        end
        ap_ST_st86_fsm_85 : 
        begin
            ap_NS_fsm = ap_ST_st87_fsm_86;
        end
        ap_ST_st87_fsm_86 : 
        begin
            ap_NS_fsm = ap_ST_st88_fsm_87;
        end
        ap_ST_st88_fsm_87 : 
        begin
            ap_NS_fsm = ap_ST_st89_fsm_88;
        end
        ap_ST_st89_fsm_88 : 
        begin
            ap_NS_fsm = ap_ST_st90_fsm_89;
        end
        ap_ST_st90_fsm_89 : 
        begin
            ap_NS_fsm = ap_ST_st91_fsm_90;
        end
        ap_ST_st91_fsm_90 : 
        begin
            ap_NS_fsm = ap_ST_st92_fsm_91;
        end
        ap_ST_st92_fsm_91 : 
        begin
            ap_NS_fsm = ap_ST_st93_fsm_92;
        end
        ap_ST_st93_fsm_92 : 
        begin
            if ((ap_const_lv1_0 == exitcond_flatten2_fu_1605_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp3_stg0_fsm_93;
            end
        end
        ap_ST_pp3_stg0_fsm_93 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & ~((ap_const_lv1_0 == exitcond_flatten3_reg_2201) & (ap_const_logic_0 == ap_sig_ioackin_OUTPUT_STREAM_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1)) & ~(ap_const_lv1_0 == exitcond_flatten3_fu_1611_p2))) begin
                ap_NS_fsm = ap_ST_pp3_stg0_fsm_93;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & ~((ap_const_lv1_0 == exitcond_flatten3_reg_2201) & (ap_const_logic_0 == ap_sig_ioackin_OUTPUT_STREAM_TREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1)) & ~(ap_const_lv1_0 == exitcond_flatten3_fu_1611_p2))) begin
                ap_NS_fsm = ap_ST_st96_fsm_94;
            end else begin
                ap_NS_fsm = ap_ST_pp3_stg0_fsm_93;
            end
        end
        ap_ST_st96_fsm_94 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign HLS_accel_CONTROL_BUS_s_axi_U_ap_dummy_ce = ap_const_logic_1;
assign OUTPUT_STREAM_TDATA = out_q0;
assign OUTPUT_STREAM_TDEST = ap_const_lv5_0;
assign OUTPUT_STREAM_TID = ap_const_lv5_0;
assign OUTPUT_STREAM_TKEEP = ap_const_lv4_F;
assign OUTPUT_STREAM_TLAST = last_assign_reg_2220;
assign OUTPUT_STREAM_TSTRB = ap_const_lv4_F;
assign OUTPUT_STREAM_TUSER = ap_const_lv4_0;
assign a_load_1_to_int_fu_1019_p1 = a_load_1_reg_1821;
assign a_load_2_to_int_fu_1308_p1 = a_load_2_reg_1827;
assign a_load_3_to_int_fu_1067_p1 = a_load_3_reg_1866;
assign a_load_4_to_int_fu_1415_p1 = a_load_4_reg_1877;
assign a_load_5_to_int_fu_1468_p1 = a_load_5_reg_1914;
assign a_load_6_to_int_fu_1115_p1 = a_load_6_reg_1921;
assign a_load_7_to_int_fu_1522_p1 = a_load_7_reg_1947;
assign a_load_8_to_int_fu_1163_p1 = a_load_8_reg_1954;

/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n)
begin
    ap_rst_n_inv = ~ap_rst_n;
end

/// ap_sig_bdd_1001 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1001 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2A]);
end

/// ap_sig_bdd_1009 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1009 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_36]);
end

/// ap_sig_bdd_1017 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1017 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_56]);
end

/// ap_sig_bdd_1031 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1031 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_50]);
end

/// ap_sig_bdd_136 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_136 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_1778 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1778 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5E]);
end

/// ap_sig_bdd_187 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_187 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_198 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_198 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_18]);
end

/// ap_sig_bdd_209 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_209 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_29]);
end

/// ap_sig_bdd_220 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_220 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_35]);
end

/// ap_sig_bdd_228 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_228 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4F]);
end

/// ap_sig_bdd_243 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_243 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_258 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_258 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_266 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_266 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_275 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_275 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_284 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_284 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_292 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_292 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_55]);
end

/// ap_sig_bdd_305 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_305 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_49]);
end

/// ap_sig_bdd_313 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_313 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4E]);
end

/// ap_sig_bdd_322 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_322 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_329 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_329 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end

/// ap_sig_bdd_338 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_338 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_28]);
end

/// ap_sig_bdd_346 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_346 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_34]);
end

/// ap_sig_bdd_354 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_354 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_40]);
end

/// ap_sig_bdd_364 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_364 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end

/// ap_sig_bdd_372 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_372 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1D]);
end

/// ap_sig_bdd_381 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_381 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2E]);
end

/// ap_sig_bdd_390 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_390 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3A]);
end

/// ap_sig_bdd_398 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_398 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5A]);
end

/// ap_sig_bdd_411 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_411 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3B]);
end

/// ap_sig_bdd_418 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_418 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5B]);
end

/// ap_sig_bdd_431 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_431 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_436 assign process. ///
always @ (INPUT_STREAM_TVALID or exitcond_flatten_fu_604_p2)
begin
    ap_sig_bdd_436 = ((INPUT_STREAM_TVALID == ap_const_logic_0) & (ap_const_lv1_0 == exitcond_flatten_fu_604_p2));
end

/// ap_sig_bdd_453 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_453 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_457 assign process. ///
always @ (INPUT_STREAM_TVALID or exitcond_flatten8_fu_682_p2)
begin
    ap_sig_bdd_457 = ((INPUT_STREAM_TVALID == ap_const_logic_0) & (ap_const_lv1_0 == exitcond_flatten8_fu_682_p2));
end

/// ap_sig_bdd_474 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_474 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_485 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_485 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_525 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_525 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_549 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_549 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_566 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_566 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_587 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_587 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_620 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_620 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_635 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_635 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end

/// ap_sig_bdd_648 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_648 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end

/// ap_sig_bdd_659 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_659 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end

/// ap_sig_bdd_668 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_668 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end

/// ap_sig_bdd_680 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_680 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1F]);
end

/// ap_sig_bdd_690 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_690 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end

/// ap_sig_bdd_701 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_701 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end

/// ap_sig_bdd_710 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_710 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2F]);
end

/// ap_sig_bdd_721 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_721 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_30]);
end

/// ap_sig_bdd_729 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_729 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_44]);
end

/// ap_sig_bdd_738 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_738 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5C]);
end

/// ap_sig_bdd_757 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_757 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5D]);
end

/// ap_sig_bdd_931 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_931 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3C]);
end

/// ap_sig_bdd_938 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_938 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_45]);
end

/// ap_sig_bdd_945 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_945 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4A]);
end

/// ap_sig_bdd_955 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_955 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_41]);
end

/// ap_sig_bdd_994 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_994 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end
assign b_d0 = INPUT_STREAM_TDATA;
assign exitcond2_i_fu_694_p2 = (j2_0_i_reg_386 == ap_const_lv6_20? 1'b1: 1'b0);
assign exitcond2_i_i_fu_1589_p2 = (q_reg_1834 == ap_const_lv6_20? 1'b1: 1'b0);
assign exitcond2_i_i_mid_fu_774_p2 = (exitcond2_i_i1_reg_409 & not_exitcond_flatten_fu_768_p2);
assign exitcond4_i_fu_616_p2 = (j_0_i_reg_353 == ap_const_lv6_20? 1'b1: 1'b0);
assign exitcond_flatten1_fu_1594_p2 = (indvar_flatten_next2_fu_1581_p3 == ap_const_lv12_400? 1'b1: 1'b0);
assign exitcond_flatten2_fu_1605_p2 = (indvar_flatten2_reg_475 == ap_const_lv14_27FF? 1'b1: 1'b0);
assign exitcond_flatten3_fu_1611_p2 = (indvar_flatten3_reg_486 == ap_const_lv11_400? 1'b1: 1'b0);
assign exitcond_flatten8_fu_682_p2 = (indvar_flatten6_reg_364 == ap_const_lv11_400? 1'b1: 1'b0);
assign exitcond_flatten_fu_604_p2 = (indvar_flatten_reg_331 == ap_const_lv11_400? 1'b1: 1'b0);
assign exitcond_i_fu_1623_p2 = (j5_0_i_reg_508 == ap_const_lv6_20? 1'b1: 1'b0);
assign grp_fu_520_ce = ap_const_logic_1;
assign grp_fu_526_ce = ap_const_logic_1;
assign grp_fu_532_p0 = reg_592;
assign grp_fu_547_ce = ap_const_logic_1;
assign grp_fu_552_ce = ap_const_logic_1;
assign i1_0_i_mid2_fu_714_p3 = ((exitcond2_i_fu_694_p2)? i_s_fu_708_p2: i1_0_i_reg_375);
assign i4_0_i_mid2_fu_1643_p3 = ((exitcond_i_fu_1623_p2)? i_1_fu_1637_p2: i4_0_i_phi_fu_501_p4);
assign i_0_i_mid2_fu_636_p3 = ((exitcond4_i_fu_616_p2)? i_fu_630_p2: i_0_i_reg_342);
assign i_1_fu_1637_p2 = (i4_0_i_phi_fu_501_p4 + ap_const_lv6_1);
assign i_fu_630_p2 = (i_0_i_reg_342 + ap_const_lv6_1);
assign i_s_fu_708_p2 = (i1_0_i_reg_375 + ap_const_lv6_1);
assign indvar_flatten13_op_fu_1575_p2 = (indvar_flatten1_reg_464 + ap_const_lv12_1);
assign indvar_flatten_next1_fu_1617_p2 = (indvar_flatten3_reg_486 + ap_const_lv11_1);
assign indvar_flatten_next2_fu_1581_p3 = ((exitcond_flatten4_reg_397)? ap_const_lv12_1: indvar_flatten13_op_fu_1575_p2);
assign indvar_flatten_next3_fu_1569_p2 = (indvar_flatten2_reg_475 + ap_const_lv14_1);
assign indvar_flatten_next7_fu_688_p2 = (indvar_flatten6_reg_364 + ap_const_lv11_1);
assign indvar_flatten_next_fu_610_p2 = (indvar_flatten_reg_331 + ap_const_lv11_1);
assign j2_0_i_mid2_fu_700_p3 = ((exitcond2_i_fu_694_p2)? ap_const_lv6_0: j2_0_i_reg_386);
assign j5_0_i_cast5_fu_1663_p1 = j5_0_i_mid2_fu_1629_p3;
assign j5_0_i_mid2_fu_1629_p3 = ((exitcond_i_fu_1623_p2)? ap_const_lv6_0: j5_0_i_reg_508);
assign j_0_i_mid2_fu_622_p3 = ((exitcond4_i_fu_616_p2)? ap_const_lv6_0: j_0_i_reg_353);
assign j_1_fu_754_p2 = (j2_0_i_mid2_fu_700_p3 + ap_const_lv6_1);
assign j_2_fu_1706_p2 = (j5_0_i_mid2_fu_1629_p3 + ap_const_lv6_1);
assign j_fu_676_p2 = (j_0_i_mid2_fu_622_p3 + ap_const_lv6_1);
assign k_fu_1667_p2 = (j5_0_i_cast5_fu_1663_p1 + tmp_8_fu_1655_p3);
assign last_assign_fu_1700_p2 = (k_fu_1667_p2 == ap_const_lv10_3FF? 1'b1: 1'b0);
assign m_assign_to_int_fu_1216_p1 = b_load_reg_2039;
assign not_exitcond_flatten_fu_768_p2 = (exitcond_flatten4_reg_397 ^ ap_const_lv1_1);
assign notlhs1_fu_1325_p2 = (tmp_25_fu_1311_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs2_fu_1084_p2 = (tmp_47_fu_1070_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs3_fu_1432_p2 = (tmp_54_fu_1418_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs4_fu_1485_p2 = (tmp_59_fu_1471_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs5_fu_1132_p2 = (tmp_64_fu_1118_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs6_fu_1539_p2 = (tmp_69_fu_1525_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs7_fu_1180_p2 = (tmp_74_fu_1166_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs8_fu_1233_p2 = (tmp_79_fu_1219_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs9_fu_1372_p2 = (tmp_96_fu_1358_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs_fu_1036_p2 = (tmp_fu_1022_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notrhs1_fu_1331_p2 = (tmp_30_fu_1321_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs2_fu_1090_p2 = (tmp_48_fu_1080_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs3_fu_1438_p2 = (tmp_60_fu_1428_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs4_fu_1491_p2 = (tmp_70_fu_1481_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs5_fu_1138_p2 = (tmp_83_fu_1128_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs6_fu_1545_p2 = (tmp_85_fu_1535_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs7_fu_1186_p2 = (tmp_88_fu_1176_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs8_fu_1239_p2 = (tmp_90_fu_1229_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs9_fu_1378_p2 = (tmp_97_fu_1368_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs_fu_1042_p2 = (tmp_16_fu_1032_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign or_cond_i12_i_i_fu_1251_p2 = (tmp_81_fu_1245_p2 & tmp_91_reg_2060);
assign out_d0 = reg_597;
assign output_0_i13_i_i_fu_1293_p3 = ((tmp_93_reg_2071)? ap_const_lv32_42C80000: ap_const_lv32_0);
assign p_0_i_i_mid2_fu_786_p3 = ((exitcond2_i_i_mid_fu_774_p2)? p_fu_780_p2: p_0_i_i_mid_fu_760_p3);
assign p_0_i_i_mid_fu_760_p3 = ((exitcond_flatten4_reg_397)? ap_const_lv6_0: p_0_i_i_reg_420);
assign p_addr10_fu_988_p2 = (p_addr8_cast1_fu_934_p1 + tmp_52_0_1_trn_cast_reg_1799);
assign p_addr11_cast1_fu_960_p1 = tmp_75_fu_952_p3;
assign p_addr11_cast_fu_964_p1 = tmp_75_fu_952_p3;
assign p_addr11_fu_1689_p2 = (p_addr16_cast_fu_1685_p1 + tmp_5_trn_cast_fu_1673_p1);
assign p_addr16_cast_fu_1685_p1 = tmp_102_fu_1677_p3;
assign p_addr1_fu_665_p2 = (p_addr_cast_fu_661_p1 + tmp_7_trn_cast_fu_649_p1);
assign p_addr2_cast_fu_739_p1 = tmp_5_fu_731_p3;
assign p_addr2_fu_968_p2 = ($signed(p_addr11_cast_fu_964_p1) + $signed(tmp_16_trn_cast1_reg_1816));
assign p_addr3_fu_743_p2 = (p_addr2_cast_fu_739_p1 + tmp_6_trn_cast_fu_727_p1);
assign p_addr4_cast_fu_844_p1 = $signed(tmp_12_fu_836_p3);
assign p_addr4_fu_978_p2 = (p_addr11_cast1_fu_960_p1 + tmp_52_0_1_trn_cast_reg_1799);
assign p_addr5_fu_848_p2 = ($signed(p_addr4_cast_fu_844_p1) + $signed(tmp_16_trn_cast_fu_832_p1));
assign p_addr6_fu_871_p2 = ($signed(p_addr4_cast_fu_844_p1) + $signed(tmp_52_0_1_trn_cast_fu_867_p1));
assign p_addr7_fu_902_p2 = ($signed(p_addr4_cast_reg_1783) + $signed(tmp_46_0_2_trn_cast_fu_898_p1));
assign p_addr8_cast1_fu_934_p1 = tmp_53_reg_1851;
assign p_addr8_cast_fu_919_p1 = tmp_53_fu_912_p3;
assign p_addr8_fu_983_p2 = (p_addr11_cast1_fu_960_p1 + tmp_46_0_2_trn_cast_reg_1840);
assign p_addr9_fu_923_p2 = ($signed(p_addr8_cast_fu_919_p1) + $signed(tmp_16_trn_cast1_fu_890_p1));
assign p_addr_cast_fu_661_p1 = tmp_1_fu_653_p3;
assign p_addr_fu_937_p2 = (p_addr8_cast1_fu_934_p1 + tmp_46_0_2_trn_cast_reg_1840);
assign p_fu_780_p2 = (p_0_i_i_mid_fu_760_p3 + ap_const_lv6_1);
assign q_0_i_i_mid2_fu_799_p3 = ((tmp_7_fu_794_p2)? ap_const_lv6_0: q_0_i_i_reg_431);
assign q_fu_893_p2 = (q_0_i_i_mid2_reg_1768 + ap_const_lv6_1);
assign ret_fu_644_p1 = INPUT_STREAM_TDATA;
assign sel_tmp1_fu_1262_p2 = (or_cond_i12_i_i_reg_2065 ^ ap_const_lv1_1);
assign sel_tmp2_fu_1267_p2 = (tmp_93_reg_2071 & sel_tmp1_fu_1262_p2);
assign speed_0_i_i_mid2_fu_1005_p3 = ((exitcond_flatten4_reg_397)? speed1_reg_442: speed_0_i_i_reg_453);
assign speed_fu_1600_p2 = (speed_0_i_i_mid2_reg_1977 + ap_const_lv4_1);
assign sum_4_i_i_0_1_fu_1402_p3 = ((tmp_23_reg_1793)? sum_4_i_i_reg_2089: reg_585);
assign sum_4_i_i_0_2_fu_1409_p3 = ((tmp_23_reg_1793)? sum_4_i_i_reg_2089: grp_fu_532_p1);
assign sum_4_i_i_1_fu_1462_p3 = ((tmp_52_reg_1810)? sum_4_i_i_0_2_reg_2121: grp_fu_520_p2);
assign sum_4_i_i_2_fu_1515_p3 = ((tmp_52_reg_1810)? reg_585: grp_fu_532_p1);
assign sum_4_i_i_fu_1301_p3 = ((tmp_11_reg_1778)? ap_const_lv32_0: grp_fu_532_p1);
assign tmp_100_fu_1390_p2 = (tmp_98_fu_1384_p2 & tmp_99_reg_2101);
assign tmp_101_fu_1651_p1 = i4_0_i_mid2_fu_1643_p3[4:0];
assign tmp_102_fu_1677_p3 = {{i4_0_i_mid2_fu_1643_p3}, {ap_const_lv5_0}};
assign tmp_103_fu_1695_p1 = p_addr11_fu_1689_p2;
assign tmp_10_fu_818_p2 = (x_assign_fu_807_p2 | y_assign_fu_812_p2);
assign tmp_12_fu_836_p3 = {{x_assign_fu_807_p2}, {ap_const_lv5_0}};
assign tmp_13_fu_854_p1 = p_addr5_fu_848_p2;
assign tmp_16_fu_1032_p1 = a_load_1_to_int_fu_1019_p1[22:0];
assign tmp_16_trn_cast1_fu_890_p1 = $signed(y_assign_reg_1773);
assign tmp_16_trn_cast_fu_832_p1 = $signed(y_assign_fu_812_p2);
assign tmp_17_fu_1048_p2 = (notrhs_fu_1042_p2 | notlhs_fu_1036_p2);
assign tmp_19_fu_1054_p2 = (tmp_17_fu_1048_p2 & tmp_18_reg_1861);
assign tmp_1_fu_653_p3 = {{i_0_i_mid2_fu_636_p3}, {ap_const_lv5_0}};
assign tmp_21_fu_1059_p3 = ((tmp_19_fu_1054_p2)? reg_573: ap_const_lv64_0);
assign tmp_24_fu_877_p1 = p_addr6_fu_871_p2;
assign tmp_25_fu_1311_p4 = {{a_load_2_to_int_fu_1308_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_30_fu_1321_p1 = a_load_2_to_int_fu_1308_p1[22:0];
assign tmp_32_fu_1013_p2 = (speed_0_i_i_mid2_fu_1005_p3 == ap_const_lv4_9? 1'b1: 1'b0);
assign tmp_33_fu_1337_p2 = (notrhs1_fu_1331_p2 | notlhs1_fu_1325_p2);
assign tmp_3_fu_671_p1 = p_addr1_fu_665_p2;
assign tmp_45_fu_1343_p2 = (tmp_33_fu_1337_p2 & tmp_44_reg_1909);
assign tmp_46_0_2_trn_cast_fu_898_p1 = q_fu_893_p2;
assign tmp_46_fu_907_p1 = p_addr7_fu_902_p2;
assign tmp_47_fu_1070_p4 = {{a_load_3_to_int_fu_1067_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_48_fu_1080_p1 = a_load_3_to_int_fu_1067_p1[22:0];
assign tmp_49_0_2_fu_1107_p3 = ((tmp_51_fu_1102_p2)? reg_573: ap_const_lv64_0);
assign tmp_49_2_2_fu_1203_p3 = ((tmp_78_fu_1198_p2)? reg_573: ap_const_lv64_0);
assign tmp_49_2_fu_1155_p3 = ((tmp_68_fu_1150_p2)? reg_573: ap_const_lv64_0);
assign tmp_49_fu_1096_p2 = (notrhs2_fu_1090_p2 | notlhs2_fu_1084_p2);
assign tmp_51_fu_1102_p2 = (tmp_49_fu_1096_p2 & tmp_50_reg_1942);
assign tmp_52_0_1_trn_cast_fu_867_p1 = q_0_i_i_mid2_fu_799_p3;
assign tmp_53_fu_912_p3 = {{p_0_i_i_mid2_reg_1760}, {ap_const_lv5_0}};
assign tmp_54_fu_1418_p4 = {{a_load_4_to_int_fu_1415_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_55_fu_929_p1 = p_addr9_fu_923_p2;
assign tmp_56_fu_1444_p2 = (notrhs3_fu_1438_p2 | notlhs3_fu_1432_p2);
assign tmp_58_fu_1450_p2 = (tmp_56_fu_1444_p2 & tmp_57_reg_1983);
assign tmp_59_fu_1471_p4 = {{a_load_5_to_int_fu_1468_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_5_fu_731_p3 = {{i1_0_i_mid2_fu_714_p3}, {ap_const_lv5_0}};
assign tmp_5_trn_cast_fu_1673_p1 = j5_0_i_mid2_fu_1629_p3;
assign tmp_60_fu_1428_p1 = a_load_4_to_int_fu_1415_p1[22:0];
assign tmp_61_fu_1497_p2 = (notrhs4_fu_1491_p2 | notlhs4_fu_1485_p2);
assign tmp_63_fu_1503_p2 = (tmp_61_fu_1497_p2 & tmp_62_reg_1999);
assign tmp_64_fu_1118_p4 = {{a_load_6_to_int_fu_1115_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_65_fu_942_p1 = p_addr_fu_937_p2;
assign tmp_66_fu_1144_p2 = (notrhs5_fu_1138_p2 | notlhs5_fu_1132_p2);
assign tmp_68_fu_1150_p2 = (tmp_66_fu_1144_p2 & tmp_67_reg_2004);
assign tmp_69_fu_1525_p4 = {{a_load_7_to_int_fu_1522_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_6_fu_749_p1 = p_addr3_fu_743_p2;
assign tmp_6_trn_cast_fu_727_p1 = j2_0_i_mid2_fu_700_p3;
assign tmp_70_fu_1481_p1 = a_load_5_to_int_fu_1468_p1[22:0];
assign tmp_71_fu_1551_p2 = (notrhs6_fu_1545_p2 | notlhs6_fu_1539_p2);
assign tmp_73_fu_1557_p2 = (tmp_71_fu_1551_p2 & tmp_72_reg_2014);
assign tmp_74_fu_1166_p4 = {{a_load_8_to_int_fu_1163_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_75_fu_952_p3 = {{x_assign_s_fu_947_p2}, {ap_const_lv5_0}};
assign tmp_76_fu_1192_p2 = (notrhs7_fu_1186_p2 | notlhs7_fu_1180_p2);
assign tmp_78_fu_1198_p2 = (tmp_76_fu_1192_p2 & tmp_77_reg_2034);
assign tmp_79_fu_1219_p4 = {{m_assign_to_int_fu_1216_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_7_fu_794_p2 = (exitcond2_i_i_mid_reg_1755 | exitcond_flatten4_reg_397);
assign tmp_7_trn_cast_fu_649_p1 = j_0_i_mid2_fu_622_p3;
assign tmp_80_fu_973_p1 = p_addr2_fu_968_p2;
assign tmp_81_fu_1245_p2 = (notrhs8_fu_1239_p2 | notlhs8_fu_1233_p2);
assign tmp_83_fu_1128_p1 = a_load_6_to_int_fu_1115_p1[22:0];
assign tmp_84_fu_993_p1 = p_addr4_reg_1894;
assign tmp_85_fu_1535_p1 = a_load_7_to_int_fu_1522_p1[22:0];
assign tmp_86_fu_997_p1 = p_addr8_reg_1899;
assign tmp_88_fu_1176_p1 = a_load_8_to_int_fu_1163_p1[22:0];
assign tmp_89_fu_1001_p1 = p_addr10_reg_1904;
assign tmp_8_fu_1655_p3 = {{tmp_101_fu_1651_p1}, {ap_const_lv5_0}};
assign tmp_90_fu_1229_p1 = m_assign_to_int_fu_1216_p1[22:0];
assign tmp_91_fu_1211_p2 = (tmp_82_reg_2050 | grp_fu_540_p2);
assign tmp_93_fu_1256_p2 = (tmp_81_fu_1245_p2 & grp_fu_540_p2);
assign tmp_94_fu_1272_p3 = ((sel_tmp2_fu_1267_p2)? ap_const_lv32_C2C80000: ap_const_lv32_0);
assign tmp_95_fu_1280_p2 = (sel_tmp2_fu_1267_p2 | or_cond_i12_i_i_reg_2065);
assign tmp_96_fu_1358_p4 = {{x_assign_1_to_int_fu_1355_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_97_fu_1368_p1 = x_assign_1_to_int_fu_1355_p1[22:0];
assign tmp_98_fu_1384_p2 = (notrhs9_fu_1378_p2 | notlhs9_fu_1372_p2);
assign tmp_fu_1022_p4 = {{a_load_1_to_int_fu_1019_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign x_assign_1_fu_1285_p3 = ((tmp_95_fu_1280_p2)? tmp_94_fu_1272_p3: ap_const_lv32_42C80000);
assign x_assign_1_to_int_fu_1355_p1 = x_assign_1_reg_2077;
assign x_assign_2_fu_1395_p3 = ((tmp_100_fu_1390_p2)? x_assign_1_reg_2077: ap_const_lv32_0);
assign x_assign_6_0_1_fu_1348_p3 = ((tmp_45_reg_2096)? a_load_2_reg_1827: ap_const_lv32_0);
assign x_assign_6_1_2_fu_1508_p3 = ((tmp_63_reg_2142)? a_load_5_reg_1914: ap_const_lv32_0);
assign x_assign_6_1_fu_1455_p3 = ((tmp_58_reg_2127)? a_load_4_reg_1877: ap_const_lv32_0);
assign x_assign_6_2_1_fu_1562_p3 = ((tmp_73_reg_2157)? a_load_7_reg_1947: ap_const_lv32_0);
assign x_assign_fu_807_p2 = ($signed(p_0_i_i_mid2_reg_1760) + $signed(ap_const_lv6_3F));
assign x_assign_s_fu_947_p2 = (p_0_i_i_mid2_reg_1760 + ap_const_lv6_1);
assign y_assign_fu_812_p2 = ($signed(q_0_i_i_mid2_fu_799_p3) + $signed(ap_const_lv6_3F));
always @ (posedge ap_clk)
begin
    p_addr4_cast_reg_1783[4:0] <= 5'b00000;
    tmp_52_0_1_trn_cast_reg_1799[11:6] <= 6'b000000;
    tmp_46_0_2_trn_cast_reg_1840[11:6] <= 6'b000000;
    tmp_53_reg_1851[4:0] <= 5'b00000;
    tmp_89_reg_1965[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    x_assign_1_reg_2077[18:0] <= 19'b0000000000000000000;
    x_assign_1_reg_2077[21:20] <= 2'b00;
    x_assign_1_reg_2077[24:24] <= 1'b0;
    x_assign_1_reg_2077[29:26] <= 4'b0000;
    x_assign_2_reg_2111[18:0] <= 19'b0000000000000000000;
    x_assign_2_reg_2111[21:20] <= 2'b00;
    x_assign_2_reg_2111[24:24] <= 1'b0;
    x_assign_2_reg_2111[29:26] <= 4'b0000;
end



endmodule //HLS_accel

